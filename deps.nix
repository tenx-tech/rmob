# Generated by cargo2nix 0.3.0
({
    pkgs
  , callPackage
  , mkRustCrate
  , config
  , ...
}:
  (self:
    {
      "registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" = mkRustCrate {
        package-id = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "ansi_term";
          version = "0.11.0";
          sha256 = "ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "ansi_term";
            version = "0.11.0";
            authors = [
              "ogham@bsago.me"
              "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
              "Josh Triplett <josh@joshtriplett.org>"
            ];
            description = "Library for ANSI terminal colours and styles (bold, underline)";
            homepage = "https://github.com/ogham/rust-ansi-term";
            documentation = "https://docs.rs/ansi_term";
            readme = "README.md";
            license = "MIT";
          };
          lib = {
            name = "ansi_term";
          };
          target = {
            "cfg(target_os=\"windows\")" = {
              dependencies = {
                winapi = {
                  version = "0.3.4";
                  features = [
                    "errhandlingapi"
                    "consoleapi"
                    "processenv"
                  ];
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".argon2rs."0.2.5" = mkRustCrate {
        package-id = "argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "argon2rs";
          version = "0.2.5";
          sha256 = "3f67b0b6a86dae6e67ff4ca2b6201396074996379fba2b92ff649126f37cb392";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "blake2-rfc"
            ];
            extern-name = "blake2_rfc";
            package-id = "blake2-rfc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "scoped_threadpool"
            ];
            extern-name = "scoped_threadpool";
            package-id = "scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "argon2rs";
            version = "0.2.5";
            authors = [
              "bryant <bryant@defrag.in>"
            ];
            description = "The pure Rust password hashing library that runs on Argon2.";
            documentation = "http://bryant.github.io/argon2rs/argon2rs/";
            readme = "README.md";
            keywords = [
              "crypto"
              "argon2"
              "argon2i"
              "argon2d"
              "hash"
            ];
            license = "MIT";
            repository = "https://github.com/bryant/argon2rs";
          };
          dependencies = {
            blake2-rfc = "0.2.16";
            scoped_threadpool = "0.1.7";
          };
          dev-dependencies = {
            cargon = {
              version = "0.0.1";
              path = "benches/cargon";
            };
          };
          features = {
            default = [];
            simd = [
              "blake2-rfc/simd_asm"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.4.10" = mkRustCrate {
        package-id = "arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "arrayvec";
          version = "0.4.10";
          sha256 = "92c7fb76bc8826a8b33b4ee5bb07a247a81e76764ab4d55e8f73e3a4d8808c71";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "nodrop"
            ];
            extern-name = "nodrop";
            package-id = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "arrayvec";
            version = "0.4.10";
            authors = [
              "bluss"
            ];
            description = "A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements fixed capacity ArrayVec and ArrayString.";
            documentation = "https://docs.rs/arrayvec/";
            keywords = [
              "stack"
              "vector"
              "array"
              "data-structure"
              "no_std"
            ];
            categories = [
              "data-structures"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/bluss/arrayvec";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "serde-1"
                  ];
                };
              };
              release = {
                no-dev-version = true;
              };
            };
          };
          bench = [
            {
              name = "extend";
              harness = false;
            }
            {
              name = "arraystring";
              harness = false;
            }
          ];
          dependencies = {
            nodrop = {
              version = "0.1.12";
              default-features = false;
            };
            serde = {
              version = "1.0";
              optional = true;
              default-features = false;
            };
          };
          dev-dependencies = {
            bencher = {
              version = "0.1.4";
            };
            matches = {
              version = "0.1";
            };
            serde_test = {
              version = "1.0";
            };
          };
          build-dependencies = {};
          features = {
            array-sizes-129-255 = [];
            array-sizes-33-128 = [];
            default = [
              "std"
            ];
            serde-1 = [
              "serde"
            ];
            std = [];
            use_union = [];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".assert_cmd."0.11.0" = mkRustCrate {
        package-id = "assert_cmd 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "assert_cmd";
          version = "0.11.0";
          sha256 = "7eaef71d143e8053e28166ea984712b71a5e5d7f26a885809eb829e0c8e4f051";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "escargot"
            ];
            extern-name = "escargot";
            package-id = "escargot 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "predicates"
            ];
            extern-name = "predicates";
            package-id = "predicates 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "predicates-core"
            ];
            extern-name = "predicates_core";
            package-id = "predicates-core 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "predicates-tree"
            ];
            extern-name = "predicates_tree";
            package-id = "predicates-tree 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "assert_cmd";
            version = "0.11.0";
            authors = [
              "Pascal Hertleif <killercup@gmail.com>"
              "Ed Page <eopage@gmail.com>"
            ];
            description = "Test CLI Applications.";
            homepage = "https://github.com/assert-rs/assert_cmd";
            documentation = "http://docs.rs/assert_cmd/";
            readme = "README.md";
            keywords = [
              "cli"
              "test"
              "assert"
              "command"
              "duct"
            ];
            categories = [
              "development-tools::testing"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/assert-rs/assert_cmd.git";
          };
          bin = [
            {
              name = "bin_fixture";
            }
          ];
          dependencies = {
            escargot = {
              version = "0.4";
            };
            predicates = {
              version = "1.0";
              features = [
                "difference"
              ];
              default-features = false;
            };
            predicates-core = {
              version = "1.0";
            };
            predicates-tree = {
              version = "1.0";
            };
          };
          dev-dependencies = {
            docmatic = {
              version = "0.1";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" = mkRustCrate {
        package-id = "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "atty";
          version = "0.2.11";
          sha256 = "9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "termion"
            ];
            extern-name = "termion";
            package-id = "termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "atty";
            version = "0.2.11";
            authors = [
              "softprops <d.tangren@gmail.com>"
            ];
            description = "A simple interface for querying atty";
            homepage = "https://github.com/softprops/atty";
            documentation = "http://softprops.github.io/atty";
            readme = "README.md";
            keywords = [
              "terminal"
              "tty"
            ];
            license = "MIT";
            repository = "https://github.com/softprops/atty";
          };
          target = {
            "cfg(target_os = \"redox\")" = {
              dependencies = {
                termion = {
                  version = "1.5";
                };
              };
            };
            "cfg(unix)" = {
              dependencies = {
                libc = {
                  version = "0.2";
                  default-features = false;
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "consoleapi"
                    "processenv"
                    "minwinbase"
                    "minwindef"
                    "winbase"
                  ];
                };
              };
            };
          };
          badges = {
            travis-ci = {
              repository = "softprops/atty";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".autocfg."0.1.2" = mkRustCrate {
        package-id = "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "autocfg";
          version = "0.1.2";
          sha256 = "a6d640bee2da49f60a4068a7fae53acde8982514ab7bae8b8cea9e88cbcfd799";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "autocfg";
            version = "0.1.2";
            authors = [
              "Josh Stone <cuviper@gmail.com>"
            ];
            description = "Automatic cfg for Rust compiler features";
            readme = "README.md";
            keywords = [
              "rustc"
              "build"
              "autoconf"
            ];
            categories = [
              "development-tools::build-utils"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/cuviper/autocfg";
          };
          dependencies = {};
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.14" = mkRustCrate {
        package-id = "backtrace 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "backtrace";
          version = "0.3.14";
          sha256 = "cd5a90e2b463010cd0e0ce9a11d4a9d5d58d9f41d4a6ba3dcaf9e68b466e88b4";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "autocfg"
            ];
            extern-name = "autocfg";
            package-id = "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "backtrace-sys"
            ];
            extern-name = "backtrace_sys";
            package-id = "backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rustc-demangle"
            ];
            extern-name = "rustc_demangle";
            package-id = "rustc-demangle 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "backtrace";
            version = "0.3.14";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
              "The Rust Project Developers"
            ];
            autoexamples = true;
            autotests = true;
            description = "A library to acquire a stack trace (backtrace) at runtime in a Rust program.\n";
            homepage = "https://github.com/alexcrichton/backtrace-rs";
            documentation = "https://docs.rs/backtrace";
            readme = "README.md";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/backtrace-rs";
          };
          example = [
            {
              name = "backtrace";
              required-features = [
                "std"
              ];
            }
            {
              name = "raw";
              required-features = [
                "std"
              ];
            }
          ];
          test = [
            {
              name = "skip_inner_frames";
              required-features = [
                "std"
              ];
            }
            {
              name = "long_fn_name";
              required-features = [
                "std"
              ];
            }
            {
              name = "smoke";
              required-features = [
                "std"
              ];
            }
          ];
          dependencies = {
            addr2line = {
              version = "0.7.0";
              optional = true;
            };
            cfg-if = {
              version = "0.1.6";
            };
            cpp_demangle = {
              version = "0.2.3";
              optional = true;
              default-features = false;
            };
            findshlibs = {
              version = "0.4.0";
              optional = true;
            };
            gimli = {
              version = "0.16.0";
              optional = true;
            };
            memmap = {
              version = "0.7.0";
              optional = true;
            };
            object = {
              version = "0.9.0";
              optional = true;
            };
            rustc-demangle = {
              version = "0.1.4";
            };
            rustc-serialize = {
              version = "0.3";
              optional = true;
            };
            serde = {
              version = "1.0";
              optional = true;
            };
            serde_derive = {
              version = "1.0";
              optional = true;
            };
          };
          build-dependencies = {
            autocfg = {
              version = "0.1";
            };
          };
          features = {
            coresymbolication = [];
            dbghelp = [];
            default = [
              "std"
              "libunwind"
              "libbacktrace"
              "coresymbolication"
              "dladdr"
              "dbghelp"
            ];
            dladdr = [];
            gimli-symbolize = [
              "addr2line"
              "findshlibs"
              "gimli"
              "memmap"
              "object"
            ];
            kernel32 = [];
            libbacktrace = [
              "backtrace-sys"
              "std"
            ];
            libunwind = [];
            serialize-rustc = [
              "rustc-serialize"
            ];
            serialize-serde = [
              "serde"
              "serde_derive"
            ];
            std = [];
            unix-backtrace = [];
          };
          target = {
            "cfg(all(unix, not(target_os = \"fuchsia\"), not(target_os = \"emscripten\"), not(target_os = \"macos\"), not(target_os = \"ios\")))" = {
              dependencies = {
                backtrace-sys = {
                  version = "0.1.17";
                  optional = true;
                };
              };
            };
            "cfg(any(unix, target_env = \"sgx\"))" = {
              dependencies = {
                libc = {
                  version = "0.2.45";
                  default-features = false;
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3.3";
                  features = [
                    "dbghelp"
                    "processthreadsapi"
                    "winnt"
                    "minwindef"
                  ];
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".backtrace-sys."0.1.28" = mkRustCrate {
        package-id = "backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "backtrace-sys";
          version = "0.1.28";
          sha256 = "797c830ac25ccc92a7f8a7b9862bde440715531514594a6154e3d4a54dd769b6";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "backtrace-sys";
            version = "0.1.28";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            build = "build.rs";
            description = "Bindings to the libbacktrace gcc library\n";
            homepage = "https://github.com/alexcrichton/backtrace-rs";
            documentation = "http://alexcrichton.com/backtrace-rs";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/backtrace-rs";
          };
          dependencies = {
            libc = {
              version = "0.2";
              default-features = false;
            };
          };
          build-dependencies = {
            cc = {
              version = "1.0";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" = mkRustCrate {
        package-id = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "bitflags";
          version = "1.0.4";
          sha256 = "228047a76f468627ca71776ecdebd732a3423081fcf5125585bcd7c49886ce12";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "bitflags";
            version = "1.0.4";
            authors = [
              "The Rust Project Developers"
            ];
            exclude = [
              ".travis.yml"
              "appveyor.yml"
              "bors.toml"
            ];
            description = "A macro to generate structures which behave like bitflags.\n";
            homepage = "https://github.com/bitflags/bitflags";
            documentation = "https://docs.rs/bitflags";
            readme = "README.md";
            keywords = [
              "bit"
              "bitmask"
              "bitflags"
              "flags"
            ];
            categories = [
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/bitflags/bitflags";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "example_generated"
                  ];
                };
              };
            };
          };
          features = {
            default = [];
            example_generated = [];
          };
          badges = {
            travis-ci = {
              repository = "bitflags/bitflags";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".blake2-rfc."0.2.18" = mkRustCrate {
        package-id = "blake2-rfc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "blake2-rfc";
          version = "0.2.18";
          sha256 = "5d6d530bdd2d52966a6d03b7a964add7ae1a288d25214066fd4b600f0f796400";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "arrayvec"
            ];
            extern-name = "arrayvec";
            package-id = "arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "constant_time_eq"
            ];
            extern-name = "constant_time_eq";
            package-id = "constant_time_eq 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "blake2-rfc";
            version = "0.2.18";
            authors = [
              "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
            ];
            description = "A pure Rust implementation of BLAKE2 based on RFC 7693.";
            documentation = "https://docs.rs/blake2-rfc";
            readme = "README.md";
            keywords = [
              "blake2"
              "blake2b"
              "blake2s"
              "hash"
              "crypto"
            ];
            categories = [
              "cryptography"
              "no-std"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/cesarb/blake2-rfc";
          };
          dependencies = {
            arrayvec = {
              version = "0.4.6";
              default-features = false;
            };
            clippy = {
              version = "0.0.41";
              optional = true;
            };
            constant_time_eq = {
              version = "0.1.0";
            };
          };
          dev-dependencies = {
            data-encoding = {
              version = "2.0.0";
            };
          };
          features = {
            bench = [];
            default = [
              "std"
            ];
            simd = [];
            simd_asm = [
              "simd_opt"
            ];
            simd_opt = [
              "simd"
            ];
            std = [];
          };
          badges = {
            travis-ci = {
              repository = "cesarb/blake2-rfc";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.31" = mkRustCrate {
        package-id = "cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cc";
          version = "1.0.31";
          sha256 = "c9ce8bb087aacff865633f0bd5aeaed910fe2fe55b55f4739527f2e023a2e53d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "cc";
            version = "1.0.31";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            exclude = [
              "/.travis.yml"
              "/appveyor.yml"
            ];
            description = "A build-time dependency for Cargo build scripts to assist in invoking the native\nC compiler to compile native C code into a static archive to be linked into Rust\ncode.\n";
            homepage = "https://github.com/alexcrichton/cc-rs";
            documentation = "https://docs.rs/cc";
            readme = "README.md";
            keywords = [
              "build-dependencies"
            ];
            categories = [
              "development-tools::build-utils"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/cc-rs";
          };
          dependencies = {
            rayon = {
              version = "1.0";
              optional = true;
            };
          };
          dev-dependencies = {
            tempdir = {
              version = "0.3";
            };
          };
          features = {
            parallel = [
              "rayon"
            ];
          };
          badges = {
            appveyor = {
              repository = "alexcrichton/cc-rs";
            };
            travis-ci = {
              repository = "alexcrichton/cc-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.7" = mkRustCrate {
        package-id = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cfg-if";
          version = "0.1.7";
          sha256 = "11d43355396e872eefb45ce6342e4374ed7bc2b3a502d1b28e36d6e23c05d1f4";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "cfg-if";
            version = "0.1.7";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            description = "A macro to ergonomically define an item depending on a large number of #[cfg]\nparameters. Structured like an if-else chain, the first matching branch is the\nitem that gets emitted.\n";
            homepage = "https://github.com/alexcrichton/cfg-if";
            documentation = "https://docs.rs/cfg-if";
            readme = "README.md";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/cfg-if";
          };
          badges = {
            travis-ci = {
              repository = "alexcrichton/cfg-if";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".clap."2.32.0" = mkRustCrate {
        package-id = "clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "clap";
          version = "2.32.0";
          sha256 = "b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "ansi_term"
            ];
            extern-name = "ansi_term";
            package-id = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "atty"
            ];
            extern-name = "atty";
            package-id = "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "bitflags"
            ];
            extern-name = "bitflags";
            package-id = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "strsim"
            ];
            extern-name = "strsim";
            package-id = "strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "textwrap"
            ];
            extern-name = "textwrap";
            package-id = "textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "unicode-width"
            ];
            extern-name = "unicode_width";
            package-id = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "vec_map"
            ];
            extern-name = "vec_map";
            package-id = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "clap";
            version = "2.32.0";
            authors = [
              "Kevin K. <kbknapp@gmail.com>"
            ];
            exclude = [
              "examples/*"
              "clap-test/*"
              "tests/*"
              "benches/*"
              "*.png"
              "clap-perf/*"
              "*.dot"
            ];
            description = "A simple to use, efficient, and full featured  Command Line Argument Parser\n";
            homepage = "https://clap.rs/";
            documentation = "https://docs.rs/clap/";
            readme = "README.md";
            keywords = [
              "argument"
              "cli"
              "arg"
              "parser"
              "parse"
            ];
            categories = [
              "command-line-interface"
            ];
            license = "MIT";
            repository = "https://github.com/kbknapp/clap-rs";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "doc"
                  ];
                };
              };
            };
          };
          profile = {
            test = {
              opt-level = 1;
              lto = false;
              codegen-units = 4;
              debug = true;
              debug-assertions = true;
              rpath = false;
            };
            doc = {
              opt-level = 0;
              lto = false;
              codegen-units = 4;
              debug = true;
              debug-assertions = true;
              rpath = false;
            };
            bench = {
              opt-level = 3;
              lto = true;
              codegen-units = 1;
              debug = false;
              debug-assertions = false;
              rpath = false;
            };
            dev = {
              opt-level = 0;
              lto = false;
              codegen-units = 4;
              debug = true;
              debug-assertions = true;
              rpath = false;
            };
            release = {
              opt-level = 3;
              lto = true;
              codegen-units = 1;
              debug = false;
              debug-assertions = false;
              rpath = false;
            };
          };
          dependencies = {
            atty = {
              version = "0.2.2";
              optional = true;
            };
            bitflags = {
              version = "1.0";
            };
            clippy = {
              version = "~0.0.166";
              optional = true;
            };
            strsim = {
              version = "0.7.0";
              optional = true;
            };
            term_size = {
              version = "0.3.0";
              optional = true;
            };
            textwrap = {
              version = "0.10.0";
            };
            unicode-width = {
              version = "0.1.4";
            };
            vec_map = {
              version = "0.8";
              optional = true;
            };
            yaml-rust = {
              version = "0.3.5";
              optional = true;
            };
          };
          dev-dependencies = {
            lazy_static = {
              version = "1";
            };
            regex = {
              version = "1";
            };
            version-sync = {
              version = "0.5";
            };
          };
          features = {
            color = [
              "ansi_term"
              "atty"
            ];
            debug = [];
            default = [
              "suggestions"
              "color"
              "vec_map"
            ];
            doc = [
              "yaml"
            ];
            lints = [
              "clippy"
            ];
            nightly = [];
            no_cargo = [];
            suggestions = [
              "strsim"
            ];
            unstable = [];
            wrap_help = [
              "term_size"
              "textwrap/term_size"
            ];
            yaml = [
              "yaml-rust"
            ];
          };
          target = {
            "cfg(not(windows))" = {
              dependencies = {
                ansi_term = {
                  version = "0.11";
                  optional = true;
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "kbknapp/clap-rs";
            };
            coveralls = {
              branch = "master";
              repository = "kbknapp/clap-rs";
            };
            is-it-maintained-issue-resolution = {
              repository = "kbknapp/clap-rs";
            };
            is-it-maintained-open-issues = {
              repository = "kbknapp/clap-rs";
            };
            maintenance = {
              status = "actively-developed";
            };
            travis-ci = {
              repository = "kbknapp/clap-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" = mkRustCrate {
        package-id = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cloudabi";
          version = "0.0.3";
          sha256 = "ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "bitflags"
            ];
            extern-name = "bitflags";
            package-id = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "cloudabi";
            version = "0.0.3";
            authors = [
              "Nuxi (https://nuxi.nl/) and contributors"
            ];
            description = "Low level interface to CloudABI. Contains all syscalls and related types.";
            homepage = "https://nuxi.nl/cloudabi/";
            documentation = "https://docs.rs/cloudabi/";
            keywords = [
              "cloudabi"
            ];
            license = "BSD-2-Clause";
            repository = "https://github.com/nuxinl/cloudabi";
          };
          lib = {
            path = "cloudabi.rs";
          };
          dependencies = {
            bitflags = {
              version = "1.0";
              optional = true;
            };
          };
          features = {
            default = [
              "bitflags"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.3" = mkRustCrate {
        package-id = "constant_time_eq 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "constant_time_eq";
          version = "0.1.3";
          sha256 = "8ff012e225ce166d4422e0e78419d901719760f62ae2b7969ca6b564d1b54a9e";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "constant_time_eq";
            version = "0.1.3";
            authors = [
              "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
            ];
            description = "Compares two equal-sized byte strings in constant time.";
            documentation = "https://docs.rs/constant_time_eq";
            readme = "README";
            keywords = [
              "constant_time"
            ];
            categories = [
              "cryptography"
              "no-std"
            ];
            license = "CC0-1.0";
            repository = "https://github.com/cesarb/constant_time_eq";
          };
          badges = {
            travis-ci = {
              repository = "cesarb/constant_time_eq";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.17" = mkRustCrate {
        package-id = "curl-sys 0.4.17 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "curl-sys";
          version = "0.4.17";
          sha256 = "7b8d8e51964f58c8053337fcef48e1c4608c7ee70c6f2e457674a97dda5a5828";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libz-sys"
            ];
            extern-name = "libz_sys";
            package-id = "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "openssl-sys"
            ];
            extern-name = "openssl_sys";
            package-id = "openssl-sys 0.9.43 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "pkg-config"
            ];
            extern-name = "pkg_config";
            package-id = "pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "vcpkg"
            ];
            extern-name = "vcpkg";
            package-id = "vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "curl-sys";
            version = "0.4.17";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            build = "build.rs";
            links = "curl";
            description = "Native bindings to the libcurl library";
            documentation = "https://docs.rs/curl-sys";
            categories = [
              "external-ffi-bindings"
            ];
            license = "MIT";
            repository = "https://github.com/alexcrichton/curl-rust";
          };
          lib = {
            name = "curl_sys";
            path = "lib.rs";
          };
          dependencies = {
            libc = {
              version = "0.2.2";
            };
            libnghttp2-sys = {
              version = "0.1";
              optional = true;
            };
            libz-sys = {
              version = "1.0.18";
            };
          };
          build-dependencies = {
            cc = {
              version = "1.0";
            };
            pkg-config = {
              version = "0.3.3";
            };
          };
          features = {
            default = [
              "ssl"
            ];
            force-system-lib-on-osx = [];
            http2 = [
              "libnghttp2-sys"
            ];
            spnego = [];
            ssl = [
              "openssl-sys"
            ];
            static-curl = [];
            static-ssl = [
              "openssl-sys/vendored"
            ];
          };
          target = {
            "cfg(all(unix, not(target_os = \"macos\")))" = {
              dependencies = {
                openssl-sys = {
                  version = "0.9";
                  optional = true;
                };
              };
            };
            "cfg(target_env = \"msvc\")" = {
              build-dependencies = {
                vcpkg = {
                  version = "0.2";
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "winsock2"
                    "ws2def"
                  ];
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "alexcrichton/curl-rust";
            };
            travis-ci = {
              repository = "alexcrichton/curl-rust";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" = mkRustCrate {
        package-id = "difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "difference";
          version = "2.0.0";
          sha256 = "524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "difference";
            version = "2.0.0";
            authors = [
              "Johann Hofmann <mail@johann-hofmann.com>"
            ];
            description = "A Rust text diffing and assertion library.";
            documentation = "https://johannhof.github.io/difference.rs/difference/index.html";
            readme = "README.md";
            keywords = [
              "diff"
              "text"
              "compare"
              "changes"
              "assert"
            ];
            categories = [
              "text-processing"
              "development-tools::testing"
            ];
            license = "MIT";
            repository = "https://github.com/johannhof/difference.rs";
          };
          bin = [
            {
              name = "difference";
              doc = false;
            }
          ];
          dependencies = {
            getopts = {
              version = "0.2";
              optional = true;
            };
          };
          dev-dependencies = {
            quickcheck = {
              version = "0.4";
            };
            term = {
              version = "0.2.7";
            };
          };
          features = {
            bin = [
              "getopts"
            ];
            default = [];
          };
          badges = {
            appveyor = {
              repository = "johannhof/difference.rs";
            };
            travis-ci = {
              repository = "johannhof/difference.rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".dirs."1.0.5" = mkRustCrate {
        package-id = "dirs 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "dirs";
          version = "1.0.5";
          sha256 = "3fd78930633bd1c6e35c4b42b1df7b0cbc6bc191146e512bb3bedf243fcc3901";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "redox_users"
            ];
            extern-name = "redox_users";
            package-id = "redox_users 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "dirs";
            version = "1.0.5";
            authors = [
              "Simon Ochsenreither <simon@ochsenreither.de>"
            ];
            description = "A tiny low-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows, macOS and Redox by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS.";
            readme = "README.md";
            keywords = [
              "xdg"
              "basedir"
              "app_dirs"
              "path"
              "folder"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/soc/dirs-rs";
          };
          target = {
            "cfg(target_os = \"redox\")" = {
              dependencies = {
                redox_users = {
                  version = "0.3.0";
                };
              };
            };
            "cfg(unix)" = {
              dependencies = {
                libc = {
                  version = "0.2";
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "knownfolders"
                    "objbase"
                    "shlobj"
                    "winbase"
                    "winerror"
                  ];
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".escargot."0.4.0" = mkRustCrate {
        package-id = "escargot 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "escargot";
          version = "0.4.0";
          sha256 = "ceb9adbf9874d5d028b5e4c5739d22b71988252b25c9c98fe7cf9738bee84597";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "lazy_static"
            ];
            extern-name = "lazy_static";
            package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde_json"
            ];
            extern-name = "serde_json";
            package-id = "serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "escargot";
            version = "0.4.0";
            authors = [
              "Ed Page <eopage@gmail.com>"
            ];
            description = "Cargo API written in Paris";
            homepage = "https://github.com/crate-ci/escargot";
            documentation = "http://docs.rs/escargot/";
            readme = "README.md";
            keywords = [
              "cargo"
              "packaging"
            ];
            categories = [
              "development-tools::build-utils"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/crate-ci/escargot.git";
          };
          dependencies = {
            lazy_static = {
              version = "1.1.0";
            };
            log = {
              version = "0.4";
            };
            serde = {
              version = "1.0";
              features = [
                "derive"
              ];
            };
            serde_json = {
              version = "1.0";
            };
          };
          features = {
            print = [];
            strict_unstable = [];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" = mkRustCrate {
        package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "failure";
          version = "0.1.5";
          sha256 = "795bd83d3abeb9220f257e597aa0080a508b27533824adf336529648f6abf7e2";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "backtrace"
            ];
            extern-name = "backtrace";
            package-id = "backtrace 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure_derive"
            ];
            extern-name = "failure_derive";
            package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "failure";
            version = "0.1.5";
            authors = [
              "Without Boats <boats@mozilla.com>"
            ];
            description = "Experimental error handling abstraction.";
            homepage = "https://rust-lang-nursery.github.io/failure/";
            documentation = "https://docs.rs/failure";
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/rust-lang-nursery/failure";
          };
          dependencies = {
            backtrace = {
              version = "0.3.3";
              optional = true;
            };
            failure_derive = {
              version = "0.1.5";
              optional = true;
            };
          };
          features = {
            default = [
              "std"
              "derive"
            ];
            derive = [
              "failure_derive"
            ];
            std = [
              "backtrace"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.5" = mkRustCrate {
        package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "failure_derive";
          version = "0.1.5";
          sha256 = "ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "syn"
            ];
            extern-name = "syn";
            package-id = "syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "synstructure"
            ];
            extern-name = "synstructure";
            package-id = "synstructure 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "failure_derive";
            version = "0.1.5";
            authors = [
              "Without Boats <woboats@gmail.com>"
            ];
            build = "build.rs";
            description = "derives for the failure crate";
            homepage = "https://rust-lang-nursery.github.io/failure/";
            documentation = "https://docs.rs/failure";
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/withoutboats/failure_derive";
          };
          lib = {
            proc-macro = true;
          };
          dependencies = {
            proc-macro2 = {
              version = "0.4.8";
            };
            quote = {
              version = "0.6.3";
            };
            syn = {
              version = "0.15.0";
            };
            synstructure = {
              version = "0.10.0";
            };
          };
          dev-dependencies = {
            failure = {
              version = "0.1.0";
            };
          };
          features = {
            std = [];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".fuchsia-cprng."0.1.1" = mkRustCrate {
        package-id = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "fuchsia-cprng";
          version = "0.1.1";
          sha256 = "a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "fuchsia-cprng";
            version = "0.1.1";
            authors = [
              "Erick Tryzelaar <etryzelaar@google.com>"
            ];
            include = [
              "src/*.rs"
              "Cargo.toml"
              "AUTHORS"
              "LICENSE"
              "PATENTS"
            ];
            description = "Rust crate for the Fuchsia cryptographically secure pseudorandom number generator";
            readme = "README.md";
            license-file = "LICENSE";
            repository = "https://fuchsia.googlesource.com/fuchsia/+/master/garnet/public/rust/fuchsia-cprng";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".git2."0.8.0" = mkRustCrate {
        package-id = "git2 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "git2";
          version = "0.8.0";
          sha256 = "c7339329bfa14a00223244311560d11f8f489b453fb90092af97f267a6090ab0";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "bitflags"
            ];
            extern-name = "bitflags";
            package-id = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libgit2-sys"
            ];
            extern-name = "libgit2_sys";
            package-id = "libgit2-sys 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "openssl-probe"
            ];
            extern-name = "openssl_probe";
            package-id = "openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "openssl-sys"
            ];
            extern-name = "openssl_sys";
            package-id = "openssl-sys 0.9.43 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "url"
            ];
            extern-name = "url";
            package-id = "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "git2";
            version = "0.8.0";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            description = "Bindings to libgit2 for interoperating with git repositories. This library is\nboth threadsafe and memory safe and allows both reading and writing git\nrepositories.\n";
            homepage = "https://github.com/alexcrichton/git2-rs";
            documentation = "https://docs.rs/git2";
            readme = "README.md";
            keywords = [
              "git"
            ];
            categories = [
              "api-bindings"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/git2-rs";
          };
          dependencies = {
            bitflags = {
              version = "1.0";
            };
            libc = {
              version = "0.2";
            };
            libgit2-sys = {
              version = "0.7.11";
            };
            log = {
              version = "0.4";
            };
            url = {
              version = "1.0";
            };
          };
          dev-dependencies = {
            docopt = {
              version = "1.0";
            };
            serde = {
              version = "1.0";
            };
            serde_derive = {
              version = "1.0";
            };
            tempdir = {
              version = "0.3.7";
            };
            thread-id = {
              version = "3.3.0";
            };
            time = {
              version = "0.1.39";
            };
          };
          features = {
            curl = [
              "libgit2-sys/curl"
            ];
            default = [
              "ssh"
              "https"
              "curl"
              "ssh_key_from_memory"
            ];
            https = [
              "libgit2-sys/https"
              "openssl-sys"
              "openssl-probe"
            ];
            ssh = [
              "libgit2-sys/ssh"
            ];
            ssh_key_from_memory = [
              "libgit2-sys/ssh_key_from_memory"
            ];
            unstable = [];
            vendored-openssl = [
              "openssl-sys/vendored"
            ];
          };
          target = {
            "cfg(all(unix, not(target_os = \"macos\")))" = {
              dependencies = {
                openssl-probe = {
                  version = "0.1";
                  optional = true;
                };
                openssl-sys = {
                  version = "0.9.0";
                  optional = true;
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "alexcrichton/git2-rs";
            };
            travis-ci = {
              repository = "alexcrichton/git2-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".heck."0.3.1" = mkRustCrate {
        package-id = "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "heck";
          version = "0.3.1";
          sha256 = "20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "unicode-segmentation"
            ];
            extern-name = "unicode_segmentation";
            package-id = "unicode-segmentation 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "heck";
            version = "0.3.1";
            authors = [
              "Without Boats <woboats@gmail.com>"
            ];
            description = "heck is a case conversion library.";
            homepage = "https://github.com/withoutboats/heck";
            documentation = "https://docs.rs/heck";
            readme = "README.md";
            keywords = [
              "string"
              "case"
              "camel"
              "snake"
              "unicode"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/withoutboats/heck";
          };
          dependencies = {
            unicode-segmentation = {
              version = "1.2.0";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".idna."0.1.5" = mkRustCrate {
        package-id = "idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "idna";
          version = "0.1.5";
          sha256 = "38f09e0f0b1fb55fdee1f17470ad800da77af5186a1a76c026b679358b7e844e";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "matches"
            ];
            extern-name = "matches";
            package-id = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "unicode-bidi"
            ];
            extern-name = "unicode_bidi";
            package-id = "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "unicode-normalization"
            ];
            extern-name = "unicode_normalization";
            package-id = "unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "idna";
            version = "0.1.5";
            authors = [
              "The rust-url developers"
            ];
            description = "IDNA (Internationalizing Domain Names in Applications) and Punycode.";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/servo/rust-url/";
          };
          lib = {
            test = false;
            doctest = false;
          };
          test = [
            {
              name = "tests";
              harness = false;
            }
            {
              name = "unit";
            }
          ];
          dependencies = {
            matches = {
              version = "0.1";
            };
            unicode-bidi = {
              version = "0.3";
            };
            unicode-normalization = {
              version = "0.1.5";
            };
          };
          dev-dependencies = {
            rustc-serialize = {
              version = "0.3";
            };
            rustc-test = {
              version = "0.3";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.3" = mkRustCrate {
        package-id = "itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "itoa";
          version = "0.4.3";
          sha256 = "1306f3464951f30e30d12373d31c79fbd52d236e5e896fd92f96ec7babbbe60b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "itoa";
            version = "0.4.3";
            authors = [
              "David Tolnay <dtolnay@gmail.com>"
            ];
            exclude = [
              "performance.png"
            ];
            description = "Fast functions for printing integer primitives to an io::Write";
            documentation = "https://github.com/dtolnay/itoa";
            readme = "README.md";
            categories = [
              "value-formatting"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/dtolnay/itoa";
          };
          features = {
            default = [
              "std"
            ];
            i128 = [];
            std = [];
          };
          badges = {
            travis-ci = {
              repository = "dtolnay/itoa";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.3.0" = mkRustCrate {
        package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "lazy_static";
          version = "1.3.0";
          sha256 = "bc5729f27f159ddd61f4df6228e827e86643d4d3e7c32183cb30a1c08f604a14";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "lazy_static";
            version = "1.3.0";
            authors = [
              "Marvin Löbel <loebel.marvin@gmail.com>"
            ];
            exclude = [
              "/.travis.yml"
              "/appveyor.yml"
            ];
            description = "A macro for declaring lazily evaluated statics in Rust.";
            documentation = "https://docs.rs/lazy_static";
            readme = "README.md";
            keywords = [
              "macro"
              "lazy"
              "static"
            ];
            categories = [
              "no-std"
              "rust-patterns"
              "memory-management"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-lang-nursery/lazy-static.rs";
          };
          dependencies = {
            spin = {
              version = "0.5.0";
              optional = true;
            };
          };
          features = {
            spin_no_std = [
              "spin"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-lang-nursery/lazy-static.rs";
            };
            is-it-maintained-issue-resolution = {
              repository = "rust-lang-nursery/lazy-static.rs";
            };
            is-it-maintained-open-issues = {
              repository = "rust-lang-nursery/lazy-static.rs";
            };
            maintenance = {
              status = "passively-maintained";
            };
            travis-ci = {
              repository = "rust-lang-nursery/lazy-static.rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.50" = mkRustCrate {
        package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "libc";
          version = "0.2.50";
          sha256 = "aab692d7759f5cd8c859e169db98ae5b52c924add2af5fbbca11d12fefb567c1";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "libc";
            version = "0.2.50";
            authors = [
              "The Rust Project Developers"
            ];
            build = "build.rs";
            exclude = [
              "/ci/*"
              "/.travis.yml"
              "/appveyor.yml"
            ];
            description = "Raw FFI bindings to platform libraries like libc.\n";
            homepage = "https://github.com/rust-lang/libc";
            documentation = "http://doc.rust-lang.org/libc";
            readme = "README.md";
            keywords = [
              "libc"
              "ffi"
              "bindings"
              "operating"
              "system"
            ];
            categories = [
              "external-ffi-bindings"
              "no-std"
              "os"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/rust-lang/libc";
          };
          dependencies = {
            rustc-std-workspace-core = {
              version = "1.0.0";
              optional = true;
            };
          };
          features = {
            align = [];
            default = [
              "use_std"
            ];
            extra_traits = [];
            rustc-dep-of-std = [
              "align"
              "rustc-std-workspace-core"
            ];
            use_std = [];
          };
          badges = {
            appveyor = {
              project_name = "rust-lang-libs/libc";
              repository = "rust-lang/libc";
            };
            travis-ci = {
              repository = "rust-lang/libc";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.7.11" = mkRustCrate {
        package-id = "libgit2-sys 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "libgit2-sys";
          version = "0.7.11";
          sha256 = "48441cb35dc255da8ae72825689a95368bf510659ae1ad55dc4aa88cb1789bf1";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "curl-sys"
            ];
            extern-name = "curl_sys";
            package-id = "curl-sys 0.4.17 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libssh2-sys"
            ];
            extern-name = "libssh2_sys";
            package-id = "libssh2-sys 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libz-sys"
            ];
            extern-name = "libz_sys";
            package-id = "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "openssl-sys"
            ];
            extern-name = "openssl_sys";
            package-id = "openssl-sys 0.9.43 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "pkg-config"
            ];
            extern-name = "pkg_config";
            package-id = "pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "libgit2-sys";
            version = "0.7.11";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            build = "build.rs";
            links = "git2";
            exclude = [
              "libgit2/tests/*"
            ];
            description = "Native bindings to the libgit2 library";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/git2-rs";
          };
          lib = {
            name = "libgit2_sys";
            path = "lib.rs";
          };
          dependencies = {
            curl-sys = {
              version = "0.4.10";
              optional = true;
            };
            libc = {
              version = "0.2";
            };
            libssh2-sys = {
              version = "0.2.11";
              optional = true;
            };
            libz-sys = {
              version = "1.0.22";
            };
          };
          build-dependencies = {
            cc = {
              version = "1.0.25";
            };
            pkg-config = {
              version = "0.3";
            };
          };
          features = {
            curl = [
              "curl-sys"
            ];
            https = [
              "openssl-sys"
            ];
            ssh = [
              "libssh2-sys"
            ];
            ssh_key_from_memory = [];
          };
          target = {
            "cfg(unix)" = {
              dependencies = {
                openssl-sys = {
                  version = "0.9";
                  optional = true;
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".libssh2-sys."0.2.11" = mkRustCrate {
        package-id = "libssh2-sys 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "libssh2-sys";
          version = "0.2.11";
          sha256 = "126a1f4078368b163bfdee65fbab072af08a1b374a5551b21e87ade27b1fbf9d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libz-sys"
            ];
            extern-name = "libz_sys";
            package-id = "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "openssl-sys"
            ];
            extern-name = "openssl_sys";
            package-id = "openssl-sys 0.9.43 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "pkg-config"
            ];
            extern-name = "pkg_config";
            package-id = "pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "vcpkg"
            ];
            extern-name = "vcpkg";
            package-id = "vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "libssh2-sys";
            version = "0.2.11";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            build = "build.rs";
            links = "ssh2";
            description = "Native bindings to the libssh2 library";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/ssh2-rs";
          };
          lib = {
            name = "libssh2_sys";
            path = "lib.rs";
          };
          dependencies = {
            libc = {
              version = "0.2";
            };
            libz-sys = {
              version = "1.0.21";
            };
          };
          build-dependencies = {
            cc = {
              version = "1.0.25";
            };
            pkg-config = {
              version = "0.3.11";
            };
          };
          target = {
            "cfg(target_env = \"msvc\")" = {
              build-dependencies = {
                vcpkg = {
                  version = "0.2";
                };
              };
            };
            "cfg(unix)" = {
              dependencies = {
                openssl-sys = {
                  version = "0.9.35";
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.25" = mkRustCrate {
        package-id = "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "libz-sys";
          version = "1.0.25";
          sha256 = "2eb5e43362e38e2bca2fd5f5134c4d4564a23a5c28e9b95411652021a8675ebe";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "pkg-config"
            ];
            extern-name = "pkg_config";
            package-id = "pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "vcpkg"
            ];
            extern-name = "vcpkg";
            package-id = "vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "libz-sys";
            version = "1.0.25";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            build = "build.rs";
            links = "z";
            description = "Bindings to the system libz library (also known as zlib).\n";
            documentation = "https://docs.rs/libz-sys";
            categories = [
              "external-ffi-bindings"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/libz-sys";
          };
          dependencies = {
            libc = {
              version = "0.2.43";
            };
          };
          build-dependencies = {
            cc = {
              version = "1.0.18";
            };
            pkg-config = {
              version = "0.3.9";
            };
          };
          features = {
            asm = [];
            static = [];
          };
          target = {
            "cfg(target_env = \"msvc\")" = {
              build-dependencies = {
                vcpkg = {
                  version = "0.2";
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".log."0.4.6" = mkRustCrate {
        package-id = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "log";
          version = "0.4.6";
          sha256 = "c84ec4b527950aa83a329754b01dbe3f58361d1c5efacd1f6d68c494d08a17c6";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "log";
            version = "0.4.6";
            authors = [
              "The Rust Project Developers"
            ];
            description = "A lightweight logging facade for Rust\n";
            homepage = "https://github.com/rust-lang/log";
            documentation = "https://docs.rs/log";
            readme = "README.md";
            keywords = [
              "logging"
            ];
            categories = [
              "development-tools::debugging"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-lang/log";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "std"
                    "serde"
                  ];
                };
              };
            };
          };
          test = [
            {
              name = "filters";
              harness = false;
            }
          ];
          dependencies = {
            cfg-if = {
              version = "0.1.2";
            };
            serde = {
              version = "1.0";
              optional = true;
              default-features = false;
            };
          };
          dev-dependencies = {
            serde_test = {
              version = "1.0";
            };
          };
          features = {
            max_level_debug = [];
            max_level_error = [];
            max_level_info = [];
            max_level_off = [];
            max_level_trace = [];
            max_level_warn = [];
            release_max_level_debug = [];
            release_max_level_error = [];
            release_max_level_info = [];
            release_max_level_off = [];
            release_max_level_trace = [];
            release_max_level_warn = [];
            std = [];
          };
          badges = {
            appveyor = {
              repository = "alexcrichton/log";
            };
            travis-ci = {
              repository = "rust-lang-nursery/log";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" = mkRustCrate {
        package-id = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "matches";
          version = "0.1.8";
          sha256 = "7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "matches";
            version = "0.1.8";
            authors = [
              "Simon Sapin <simon.sapin@exyr.org>"
            ];
            description = "A macro to evaluate, as a boolean, whether an expression matches a pattern.";
            documentation = "https://docs.rs/matches/";
            license = "MIT";
            repository = "https://github.com/SimonSapin/rust-std-candidates";
          };
          lib = {
            name = "matches";
            path = "lib.rs";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".nodrop."0.1.13" = mkRustCrate {
        package-id = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "nodrop";
          version = "0.1.13";
          sha256 = "2f9667ddcc6cc8a43afc9b7917599d7216aa09c463919ea32c59ed6cac8bc945";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "nodrop";
            version = "0.1.13";
            authors = [
              "bluss"
            ];
            description = "A wrapper type to inhibit drop (destructor). Use std::mem::ManuallyDrop instead!";
            documentation = "https://docs.rs/nodrop/";
            keywords = [
              "container"
              "drop"
              "no_std"
            ];
            categories = [
              "rust-patterns"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/bluss/arrayvec";
            metadata = {
              release = {
                no-dev-version = true;
              };
            };
          };
          dependencies = {
            nodrop-union = {
              version = "0.1.8";
              optional = true;
            };
          };
          features = {
            default = [
              "std"
            ];
            std = [];
            use_needs_drop = [];
            use_union = [
              "nodrop-union"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" = mkRustCrate {
        package-id = "openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "openssl-probe";
          version = "0.1.2";
          sha256 = "77af24da69f9d9341038eba93a073b1fdaaa1b788221b00a69bce9e762cb32de";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "openssl-probe";
            version = "0.1.2";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            description = "Tool for helping to find SSL certificate locations on the system for OpenSSL\n";
            homepage = "https://github.com/alexcrichton/openssl-probe";
            readme = "README.md";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/openssl-probe";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.43" = mkRustCrate {
        package-id = "openssl-sys 0.9.43 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "openssl-sys";
          version = "0.9.43";
          sha256 = "33c86834957dd5b915623e94f2f4ab2c70dd8f6b70679824155d5ae21dbd495d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "pkg-config"
            ];
            extern-name = "pkg_config";
            package-id = "pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rustc_version"
            ];
            extern-name = "rustc_version";
            package-id = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "vcpkg"
            ];
            extern-name = "vcpkg";
            package-id = "vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "openssl-sys";
            version = "0.9.43";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
              "Steven Fackler <sfackler@gmail.com>"
            ];
            build = "build/main.rs";
            links = "openssl";
            description = "FFI bindings to OpenSSL";
            readme = "README.md";
            categories = [
              "cryptography"
              "external-ffi-bindings"
            ];
            license = "MIT";
            repository = "https://github.com/sfackler/rust-openssl";
            metadata = {
              pkg-config = {
                openssl = "1.0.1";
              };
            };
          };
          dependencies = {
            libc = {
              version = "0.2";
            };
          };
          build-dependencies = {
            cc = {
              version = "1.0";
            };
            openssl-src = {
              version = "111.0.1";
              optional = true;
            };
            pkg-config = {
              version = "0.3.9";
            };
            rustc_version = {
              version = "0.2";
            };
          };
          features = {
            vendored = [
              "openssl-src"
            ];
          };
          target = {
            "cfg(target_env = \"msvc\")" = {
              build-dependencies = {
                vcpkg = {
                  version = "0.2";
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."1.0.1" = mkRustCrate {
        package-id = "percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "percent-encoding";
          version = "1.0.1";
          sha256 = "31010dd2e1ac33d5b46a5b413495239882813e0369f8ed8a5e266f173602f831";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "percent-encoding";
            version = "1.0.1";
            authors = [
              "The rust-url developers"
            ];
            description = "Percent encoding and decoding";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/servo/rust-url/";
          };
          lib = {
            path = "lib.rs";
            test = false;
            doctest = false;
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.14" = mkRustCrate {
        package-id = "pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "pkg-config";
          version = "0.3.14";
          sha256 = "676e8eb2b1b4c9043511a9b7bea0915320d7e502b0a079fb03f9635a5252b18c";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "pkg-config";
            version = "0.3.14";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            description = "A library to run the pkg-config system tool at build time in order to be used in\nCargo build scripts.\n";
            documentation = "https://docs.rs/pkg-config";
            keywords = [
              "build-dependencies"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/pkg-config-rs";
          };
          dev-dependencies = {
            lazy_static = {
              version = "1";
            };
          };
          badges = {
            travis-ci = {
              repository = "alexcrichton/pkg-config-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".predicates."1.0.0" = mkRustCrate {
        package-id = "predicates 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "predicates";
          version = "1.0.0";
          sha256 = "fa984b7cd021a0bf5315bcce4c4ae61d2a535db2a8d288fc7578638690a7b7c3";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "difference"
            ];
            extern-name = "difference";
            package-id = "difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "predicates-core"
            ];
            extern-name = "predicates_core";
            package-id = "predicates-core 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "predicates";
            version = "1.0.0";
            authors = [
              "Nick Stevens <nick@bitcurry.com>"
            ];
            description = "An implementation of boolean-valued predicate functions.\n";
            homepage = "https://github.com/assert-rs/predicates-rs";
            documentation = "https://docs.rs/predicates";
            readme = "README.md";
            keywords = [
              "predicate"
              "boolean"
              "combinatorial"
              "match"
              "logic"
            ];
            categories = [
              "data-structures"
              "rust-patterns"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/assert-rs/predicates-rs";
          };
          dependencies = {
            difference = {
              version = "2.0";
              optional = true;
            };
            float-cmp = {
              version = "0.4";
              optional = true;
            };
            normalize-line-endings = {
              version = "0.2.2";
              optional = true;
            };
            predicates-core = {
              version = "1.0";
            };
            regex = {
              version = "1.0";
              optional = true;
            };
          };
          dev-dependencies = {
            predicates-tree = {
              version = "1.0";
            };
          };
          features = {
            default = [
              "difference"
              "regex"
              "float-cmp"
              "normalize-line-endings"
            ];
            unstable = [];
          };
          badges = {
            appveyor = {
              repository = "assert-rs/predicates-rs";
            };
            travis-ci = {
              repository = "assert-rs/predicates-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".predicates-core."1.0.0" = mkRustCrate {
        package-id = "predicates-core 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "predicates-core";
          version = "1.0.0";
          sha256 = "06075c3a3e92559ff8929e7a280684489ea27fe44805174c3ebd9328dcb37178";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "predicates-core";
            version = "1.0.0";
            authors = [
              "Nick Stevens <nick@bitcurry.com>"
            ];
            description = "An API for boolean-valued predicate functions.\n";
            homepage = "https://github.com/assert-rs/predicates-rs/tree/master/predicates-core";
            documentation = "https://docs.rs/predicates-core";
            readme = "README.md";
            keywords = [
              "predicate"
              "boolean"
              "combinatorial"
              "match"
              "logic"
            ];
            categories = [
              "data-structures"
              "rust-patterns"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/assert-rs/predicates-rs/tree/master/predicates-core";
          };
          badges = {
            appveyor = {
              repository = "assert-rs/predicates-rs";
            };
            travis-ci = {
              repository = "assert-rs/predicates-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".predicates-tree."1.0.0" = mkRustCrate {
        package-id = "predicates-tree 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "predicates-tree";
          version = "1.0.0";
          sha256 = "8e63c4859013b38a76eca2414c64911fba30def9e3202ac461a2d22831220124";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "predicates-core"
            ];
            extern-name = "predicates_core";
            package-id = "predicates-core 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "treeline"
            ];
            extern-name = "treeline";
            package-id = "treeline 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "predicates-tree";
            version = "1.0.0";
            authors = [
              "Nick Stevens <nick@bitcurry.com>"
            ];
            description = "Render boolean-valued predicate functions results as a tree.\n";
            homepage = "https://github.com/assert-rs/predicates-rs/tree/master/predicates-tree";
            documentation = "https://docs.rs/predicates-tree";
            readme = "README.md";
            keywords = [
              "predicate"
              "boolean"
              "combinatorial"
              "match"
              "logic"
            ];
            categories = [
              "data-structures"
              "rust-patterns"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/assert-rs/predicates-rs/tree/master/predicates-tree";
          };
          dependencies = {
            predicates-core = {
              version = "1.0";
            };
            treeline = {
              version = "0.1";
            };
          };
          badges = {
            appveyor = {
              repository = "assert-rs/predicates-rs";
            };
            travis-ci = {
              repository = "assert-rs/predicates-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.27" = mkRustCrate {
        package-id = "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "proc-macro2";
          version = "0.4.27";
          sha256 = "4d317f9caece796be1980837fd5cb3dfec5613ebdb04ad0956deea83ce168915";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "unicode-xid"
            ];
            extern-name = "unicode_xid";
            package-id = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "proc-macro2";
            version = "0.4.27";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            build = "build.rs";
            description = "A stable implementation of the upcoming new `proc_macro` API. Comes with an\noption, off by default, to also reimplement itself in terms of the upstream\nunstable API.\n";
            homepage = "https://github.com/alexcrichton/proc-macro2";
            documentation = "https://docs.rs/proc-macro2";
            readme = "README.md";
            keywords = [
              "macros"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/proc-macro2";
            metadata = {
              docs = {
                rs = {
                  rustc-args = [
                    "--cfg"
                    "procmacro2_semver_exempt"
                  ];
                  rustdoc-args = [
                    "--cfg"
                    "procmacro2_semver_exempt"
                  ];
                };
              };
            };
          };
          dependencies = {
            unicode-xid = {
              version = "0.1";
            };
          };
          dev-dependencies = {
            quote = {
              version = "0.6";
            };
          };
          features = {
            default = [
              "proc-macro"
            ];
            nightly = [];
            proc-macro = [];
            span-locations = [];
          };
          badges = {
            travis-ci = {
              repository = "alexcrichton/proc-macro2";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".quote."0.6.11" = mkRustCrate {
        package-id = "quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "quote";
          version = "0.6.11";
          sha256 = "cdd8e04bd9c52e0342b406469d494fcb033be4bdbe5c606016defbb1681411e1";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "quote";
            version = "0.6.11";
            authors = [
              "David Tolnay <dtolnay@gmail.com>"
            ];
            include = [
              "Cargo.toml"
              "src/**/*.rs"
              "tests/**/*.rs"
              "README.md"
              "LICENSE-APACHE"
              "LICENSE-MIT"
            ];
            description = "Quasi-quoting macro quote!(...)";
            documentation = "https://docs.rs/quote/";
            readme = "README.md";
            keywords = [
              "syn"
            ];
            categories = [
              "development-tools::procedural-macro-helpers"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/dtolnay/quote";
          };
          dependencies = {
            proc-macro2 = {
              version = "0.4.21";
              default-features = false;
            };
          };
          features = {
            default = [
              "proc-macro"
            ];
            proc-macro = [
              "proc-macro2/proc-macro"
            ];
          };
          badges = {
            travis-ci = {
              repository = "dtolnay/quote";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand."0.6.5" = mkRustCrate {
        package-id = "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand";
          version = "0.6.5";
          sha256 = "6d71dacdc3c88c1fde3885a3be3fbab9f35724e6ce99467f7d9c5026132184ca";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "autocfg"
            ];
            extern-name = "autocfg";
            package-id = "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_chacha"
            ];
            extern-name = "rand_chacha";
            package-id = "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_hc"
            ];
            extern-name = "rand_hc";
            package-id = "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_isaac"
            ];
            extern-name = "rand_isaac";
            package-id = "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_jitter"
            ];
            extern-name = "rand_jitter";
            package-id = "rand_jitter 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_os"
            ];
            extern-name = "rand_os";
            package-id = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_pcg"
            ];
            extern-name = "rand_pcg";
            package-id = "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_xorshift"
            ];
            extern-name = "rand_xorshift";
            package-id = "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand";
            version = "0.6.5";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            build = "build.rs";
            exclude = [
              "/utils/*"
              "/.travis.yml"
              "/appveyor.yml"
              ".gitignore"
            ];
            description = "Random number generators and other randomness functionality.\n";
            homepage = "https://crates.io/crates/rand";
            documentation = "https://rust-random.github.io/rand";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
            metadata = {
              docs = {
                rs = {
                  all-features = true;
                };
              };
            };
          };
          dependencies = {
            log = {
              version = "0.4";
              optional = true;
            };
            packed_simd = {
              version = "0.3";
              features = [
                "into_bits"
              ];
              optional = true;
            };
            rand_chacha = {
              version = "0.1";
            };
            rand_core = {
              version = "0.4";
            };
            rand_hc = {
              version = "0.1";
            };
            rand_isaac = {
              version = "0.1";
            };
            rand_jitter = {
              version = "0.1";
            };
            rand_os = {
              version = "0.1";
              optional = true;
            };
            rand_pcg = {
              version = "0.1";
            };
            rand_xorshift = {
              version = "0.1";
            };
          };
          dev-dependencies = {
            average = {
              version = "0.9.2";
            };
            rand_xoshiro = {
              version = "0.1";
            };
          };
          build-dependencies = {
            autocfg = {
              version = "0.1";
            };
          };
          features = {
            alloc = [
              "rand_core/alloc"
            ];
            default = [
              "std"
            ];
            i128_support = [];
            nightly = [
              "simd_support"
            ];
            serde1 = [
              "rand_core/serde1"
              "rand_isaac/serde1"
              "rand_xorshift/serde1"
            ];
            simd_support = [
              "packed_simd"
            ];
            std = [
              "rand_core/std"
              "alloc"
              "rand_os"
              "rand_jitter/std"
            ];
            stdweb = [
              "rand_os/stdweb"
            ];
            wasm-bindgen = [
              "rand_os/wasm-bindgen"
            ];
          };
          target = {
            "cfg(unix)" = {
              dependencies = {
                libc = {
                  version = "0.2";
                  default-features = false;
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "minwindef"
                    "ntsecapi"
                    "profileapi"
                    "winnt"
                  ];
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.1.1" = mkRustCrate {
        package-id = "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_chacha";
          version = "0.1.1";
          sha256 = "556d3a1ca6600bfcbab7c7c91ccb085ac7fbbcd70e008a98742e7847f4f7bcef";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "autocfg"
            ];
            extern-name = "autocfg";
            package-id = "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_chacha";
            version = "0.1.1";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            build = "build.rs";
            description = "ChaCha random number generator\n";
            homepage = "https://crates.io/crates/rand_chacha";
            documentation = "https://rust-random.github.io/rand/rand_chacha";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "chacha"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = ">=0.2, <0.4";
              default-features = false;
            };
          };
          build-dependencies = {
            autocfg = {
              version = "0.1";
            };
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.1" = mkRustCrate {
        package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_core";
          version = "0.3.1";
          sha256 = "7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_core";
            version = "0.3.1";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            description = "Core random number generator traits and tools for implementation.\n";
            homepage = "https://crates.io/crates/rand_core";
            documentation = "https://rust-random.github.io/rand/rand_core";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = "0.4";
            };
          };
          features = {
            alloc = [
              "rand_core/alloc"
            ];
            default = [
              "std"
            ];
            serde1 = [
              "rand_core/serde1"
            ];
            std = [
              "rand_core/std"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.4.0" = mkRustCrate {
        package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_core";
          version = "0.4.0";
          sha256 = "d0e7a549d590831370895ab7ba4ea0c1b6b011d106b5ff2da6eee112615e6dc0";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "rand_core";
            version = "0.4.0";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            description = "Core random number generator traits and tools for implementation.\n";
            homepage = "https://crates.io/crates/rand_core";
            documentation = "https://rust-random.github.io/rand/rand_core";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            serde = {
              version = "1";
              optional = true;
            };
            serde_derive = {
              version = "^1.0.38";
              optional = true;
            };
          };
          features = {
            alloc = [];
            serde1 = [
              "serde"
              "serde_derive"
            ];
            std = [
              "alloc"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.1.0" = mkRustCrate {
        package-id = "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_hc";
          version = "0.1.0";
          sha256 = "7b40677c7be09ae76218dc623efbf7b18e34bced3f38883af07bb75630a21bc4";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_hc";
            version = "0.1.0";
            authors = [
              "The Rand Project Developers"
            ];
            description = "HC128 random number generator\n";
            homepage = "https://crates.io/crates/rand_hc";
            documentation = "https://docs.rs/rand_hc";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "hc128"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = ">=0.2, <0.4";
              default-features = false;
            };
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_isaac."0.1.1" = mkRustCrate {
        package-id = "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_isaac";
          version = "0.1.1";
          sha256 = "ded997c9d5f13925be2a6fd7e66bf1872597f759fd9dd93513dd7e92e5a5ee08";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_isaac";
            version = "0.1.1";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            description = "ISAAC random number generator\n";
            homepage = "https://crates.io/crates/rand_isaac";
            documentation = "https://rust-random.github.io/rand/rand_isaac";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "isaac"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = "0.3";
              default-features = false;
            };
            serde = {
              version = "1";
              optional = true;
            };
            serde_derive = {
              version = "^1.0.38";
              optional = true;
            };
          };
          dev-dependencies = {
            bincode = {
              version = "1";
            };
          };
          features = {
            serde1 = [
              "serde"
              "serde_derive"
              "rand_core/serde1"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_jitter."0.1.3" = mkRustCrate {
        package-id = "rand_jitter 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_jitter";
          version = "0.1.3";
          sha256 = "7b9ea758282efe12823e0d952ddb269d2e1897227e464919a554f2a03ef1b832";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_jitter";
            version = "0.1.3";
            authors = [
              "The Rand Project Developers"
            ];
            description = "Random number generator based on timing jitter";
            documentation = "https://docs.rs/rand_jitter";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "os"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            log = {
              version = "0.4";
              optional = true;
            };
            rand_core = {
              version = "0.4";
            };
          };
          features = {
            std = [
              "rand_core/std"
            ];
          };
          target = {
            "cfg(any(target_os = \"macos\", target_os = \"ios\"))" = {
              dependencies = {
                libc = {
                  version = "0.2";
                  default_features = false;
                };
              };
            };
            "cfg(target_os = \"windows\")" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "profileapi"
                  ];
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_os."0.1.3" = mkRustCrate {
        package-id = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_os";
          version = "0.1.3";
          sha256 = "7b75f676a1e053fc562eafbb47838d67c84801e38fc1ba459e8f180deabd5071";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cloudabi"
            ];
            extern-name = "cloudabi";
            package-id = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "fuchsia-cprng"
            ];
            extern-name = "fuchsia_cprng";
            package-id = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rdrand"
            ];
            extern-name = "rdrand";
            package-id = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_os";
            version = "0.1.3";
            authors = [
              "The Rand Project Developers"
            ];
            description = "OS backed Random Number Generator";
            homepage = "https://crates.io/crates/rand_os";
            documentation = "https://docs.rs/rand_os";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "os"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            log = {
              version = "0.4";
              optional = true;
            };
            rand_core = {
              version = "0.4";
              features = [
                "std"
              ];
            };
          };
          target = {
            "cfg(target_env = \"sgx\")" = {
              dependencies = {
                rdrand = {
                  version = "0.4.0";
                };
              };
            };
            "cfg(target_os = \"cloudabi\")" = {
              dependencies = {
                cloudabi = {
                  version = "0.0.3";
                };
              };
            };
            "cfg(target_os = \"fuchsia\")" = {
              dependencies = {
                fuchsia-cprng = {
                  version = "0.1.0";
                };
              };
            };
            "cfg(unix)" = {
              dependencies = {
                libc = {
                  version = "0.2";
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "minwindef"
                    "ntsecapi"
                    "winnt"
                  ];
                };
              };
            };
            wasm32-unknown-unknown = {
              dependencies = {
                stdweb = {
                  version = "0.4";
                  optional = true;
                };
                wasm-bindgen = {
                  version = "0.2.12";
                  optional = true;
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_pcg."0.1.2" = mkRustCrate {
        package-id = "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_pcg";
          version = "0.1.2";
          sha256 = "abf9b09b01790cfe0364f52bf32995ea3c39f4d2dd011eac241d2914146d0b44";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "autocfg"
            ];
            extern-name = "autocfg";
            package-id = "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_pcg";
            version = "0.1.2";
            authors = [
              "The Rand Project Developers"
            ];
            build = "build.rs";
            description = "Selected PCG random number generators\n";
            homepage = "https://crates.io/crates/rand_pcg";
            documentation = "https://rust-random.github.io/rand/rand_pcg";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "pcg"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = "0.4";
            };
            serde = {
              version = "1";
              optional = true;
            };
            serde_derive = {
              version = "^1.0.38";
              optional = true;
            };
          };
          dev-dependencies = {
            bincode = {
              version = "1.1.2";
            };
          };
          build-dependencies = {
            autocfg = {
              version = "0.1";
            };
          };
          features = {
            serde1 = [
              "serde"
              "serde_derive"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.1.1" = mkRustCrate {
        package-id = "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_xorshift";
          version = "0.1.1";
          sha256 = "cbf7e9e623549b0e21f6e97cf8ecf247c1a8fd2e8a992ae265314300b2455d5c";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_xorshift";
            version = "0.1.1";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            description = "Xorshift random number generator\n";
            homepage = "https://crates.io/crates/rand_xorshift";
            documentation = "https://rust-random.github.io/rand/rand_xorshift";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "xorshift"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = ">=0.2, <0.4";
              default-features = false;
            };
            serde = {
              version = "1";
              optional = true;
            };
            serde_derive = {
              version = "^1.0.38";
              optional = true;
            };
          };
          dev-dependencies = {
            bincode = {
              version = "1";
            };
          };
          features = {
            serde1 = [
              "serde"
              "serde_derive"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rdrand."0.4.0" = mkRustCrate {
        package-id = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rdrand";
          version = "0.4.0";
          sha256 = "678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rdrand";
            version = "0.4.0";
            authors = [
              "Simonas Kazlauskas <rdrand@kazlauskas.me>"
            ];
            description = "An implementation of random number generator based on rdrand and rdseed instructions";
            documentation = "https://docs.rs/rdrand/0.4.0/";
            keywords = [
              "rand"
              "rdrand"
              "rdseed"
              "random"
            ];
            license = "ISC";
            repository = "https://github.com/nagisa/rust_rdrand/";
          };
          dependencies = {
            rand_core = {
              version = "0.3";
              default-features = false;
            };
          };
          features = {
            default = [
              "std"
            ];
            std = [];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.51" = mkRustCrate {
        package-id = "redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "redox_syscall";
          version = "0.1.51";
          sha256 = "423e376fffca3dfa06c9e9790a9ccd282fafb3cc6e6397d01dbf64f9bacc6b85";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "redox_syscall";
            version = "0.1.51";
            authors = [
              "Jeremy Soller <jackpot51@gmail.com>"
            ];
            description = "A Rust library to access raw Redox system calls";
            documentation = "https://docs.rs/redox_syscall";
            license = "MIT";
            repository = "https://gitlab.redox-os.org/redox-os/syscall";
          };
          lib = {
            name = "syscall";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".redox_termios."0.1.1" = mkRustCrate {
        package-id = "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "redox_termios";
          version = "0.1.1";
          sha256 = "7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "redox_syscall"
            ];
            extern-name = "syscall";
            package-id = "redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "redox_termios";
            version = "0.1.1";
            authors = [
              "Jeremy Soller <jackpot51@gmail.com>"
            ];
            description = "A Rust library to access Redox termios functions";
            documentation = "https://docs.rs/redox_termios";
            license = "MIT";
            repository = "https://github.com/redox-os/termios";
          };
          lib = {
            name = "redox_termios";
            path = "src/lib.rs";
          };
          dependencies = {
            redox_syscall = {
              version = "0.1";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".redox_users."0.3.0" = mkRustCrate {
        package-id = "redox_users 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "redox_users";
          version = "0.3.0";
          sha256 = "3fe5204c3a17e97dde73f285d49be585df59ed84b50a872baf416e73b62c3828";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "argon2rs"
            ];
            extern-name = "argon2rs";
            package-id = "argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_os"
            ];
            extern-name = "rand_os";
            package-id = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "redox_syscall"
            ];
            extern-name = "syscall";
            package-id = "redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "redox_users";
            version = "0.3.0";
            authors = [
              "Jose Narvaez <goyox86@gmail.com>"
              "Wesley Hershberger <mggmugginsmc@gmail.com>"
            ];
            description = "A Rust library to access Redox users and groups functionality";
            documentation = "https://docs.rs/redox_users";
            readme = "README.md";
            keywords = [
              "redox"
              "auth"
            ];
            license = "MIT";
            repository = "https://gitlab.redox-os.org/redox-os/users";
          };
          dependencies = {
            argon2rs = {
              version = "0.2";
              default-features = false;
            };
            failure = {
              version = "0.1.1";
            };
            rand_os = {
              version = "0.1";
            };
            redox_syscall = {
              version = "0.1";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.1" = mkRustCrate {
        package-id = "remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "remove_dir_all";
          version = "0.5.1";
          sha256 = "3488ba1b9a2084d38645c4c08276a1752dcbf2c7130d74f1569681ad5d2799c5";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "remove_dir_all";
            version = "0.5.1";
            authors = [
              "Aaronepower <theaaronepower@gmail.com>"
            ];
            include = [
              "Cargo.toml"
              "LICENCE-APACHE"
              "LICENCE-MIT"
              "src/**/*"
            ];
            description = "A safe, reliable implementation of remove_dir_all for Windows";
            readme = "README.md";
            keywords = [
              "utility"
              "filesystem"
              "remove_dir"
              "windows"
            ];
            categories = [
              "filesystem"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/Aaronepower/remove_dir_all.git";
          };
          target = {
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "std"
                    "errhandlingapi"
                    "winerror"
                    "fileapi"
                    "winbase"
                  ];
                };
              };
            };
          };
        };
      };
      unknown.rmob."0.1.0" = mkRustCrate {
        package-id = "rmob 0.1.0";
        src = config.resolver {
          source = "unknown";
          name = "rmob";
          version = "0.1.0";
          sha256 = "0000000000000000000000000000000000000000000000000000";
          source-info = {};
        };
        dependencies = [
          {
            toml-names = [
              "assert_cmd"
            ];
            extern-name = "assert_cmd";
            package-id = "assert_cmd 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "dirs"
            ];
            extern-name = "dirs";
            package-id = "dirs 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "git2"
            ];
            extern-name = "git2";
            package-id = "git2 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde_json"
            ];
            extern-name = "serde_json";
            package-id = "serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "structopt"
            ];
            extern-name = "structopt";
            package-id = "structopt 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "tempfile"
            ];
            extern-name = "tempfile";
            package-id = "tempfile 3.0.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "rmob";
            version = "0.1.0";
            authors = [
              "Florian Peter <florian@tenx.tech>"
              "Eyal Kalderon <eyal.kalderon@tenx.tech"
            ];
            description = "Arr! Git mobbing in Rust";
          };
          dependencies = {
            assert_cmd = "0.11.0";
            dirs = "1.0.5";
            git2 = "0.8.0";
            serde = "1.0.89";
            serde_json = "1.0.39";
            structopt = "0.2.15";
            tempfile = "3.0.7";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.13" = mkRustCrate {
        package-id = "rustc-demangle 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rustc-demangle";
          version = "0.1.13";
          sha256 = "adacaae16d02b6ec37fdc7acfcddf365978de76d1983d3ee22afc260e1ca9619";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "rustc-demangle";
            version = "0.1.13";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            description = "Rust compiler symbol demangling.\n";
            homepage = "https://github.com/alexcrichton/rustc-demangle";
            documentation = "https://docs.rs/rustc-demangle";
            readme = "README.md";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/rustc-demangle";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" = mkRustCrate {
        package-id = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rustc_version";
          version = "0.2.3";
          sha256 = "138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "semver"
            ];
            extern-name = "semver";
            package-id = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rustc_version";
            version = "0.2.3";
            authors = [
              "Marvin Löbel <loebel.marvin@gmail.com>"
            ];
            description = "A library for querying the version of a installed rustc compiler";
            documentation = "https://docs.rs/rustc_version/";
            readme = "README.md";
            keywords = [
              "version"
              "rustc"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/Kimundi/rustc-version-rs";
          };
          dependencies = {
            semver = {
              version = "0.9";
            };
          };
          badges = {
            travis-ci = {
              repository = "Kimundi/rustc-version-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".ryu."0.2.7" = mkRustCrate {
        package-id = "ryu 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "ryu";
          version = "0.2.7";
          sha256 = "eb9e9b8cde282a9fe6a42dd4681319bfb63f121b8a8ee9439c6f4107e58a46f7";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "ryu";
            version = "0.2.7";
            authors = [
              "David Tolnay <dtolnay@gmail.com>"
            ];
            build = "build.rs";
            description = "Fast floating point to string conversion";
            documentation = "https://docs.rs/ryu";
            readme = "README.md";
            license = "Apache-2.0 OR BSL-1.0";
            repository = "https://github.com/dtolnay/ryu";
          };
          example = [
            {
              name = "benchmark";
              path = "benchmark/benchmark.rs";
            }
          ];
          dependencies = {
            no-panic = {
              version = "0.1";
              optional = true;
            };
          };
          dev-dependencies = {
            num_cpus = {
              version = "1.8";
            };
            rand = {
              version = "0.5";
            };
          };
          features = {
            small = [];
          };
          badges = {
            travis-ci = {
              repository = "dtolnay/ryu";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".scoped_threadpool."0.1.9" = mkRustCrate {
        package-id = "scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "scoped_threadpool";
          version = "0.1.9";
          sha256 = "1d51f5df5af43ab3f1360b429fa5e0152ac5ce8c0bd6485cae490332e96846a8";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "scoped_threadpool";
            version = "0.1.9";
            authors = [
              "Marvin Löbel <loebel.marvin@gmail.com>"
            ];
            description = "A library for scoped and cached threadpools.";
            documentation = "http://kimundi.github.io/scoped-threadpool-rs/scoped_threadpool/index.html";
            readme = "README.md";
            keywords = [
              "thread"
              "scoped"
              "pool"
              "cached"
              "threadpool"
            ];
            license = "MIT";
            repository = "https://github.com/Kimundi/scoped-threadpool-rs";
          };
          dev-dependencies = {
            lazy_static = {
              version = "1.0";
            };
          };
          features = {
            nightly = [];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" = mkRustCrate {
        package-id = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "semver";
          version = "0.9.0";
          sha256 = "1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "semver-parser"
            ];
            extern-name = "semver_parser";
            package-id = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "semver";
            version = "0.9.0";
            authors = [
              "Steve Klabnik <steve@steveklabnik.com>"
              "The Rust Project Developers"
            ];
            description = "Semantic version parsing and comparison.\n";
            homepage = "https://docs.rs/crate/semver/";
            documentation = "https://docs.rs/crate/semver/";
            readme = "README.md";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/steveklabnik/semver";
          };
          dependencies = {
            semver-parser = {
              version = "0.7.0";
            };
            serde = {
              version = "1.0";
              optional = true;
            };
          };
          dev-dependencies = {
            crates-index = {
              version = "0.5.0";
            };
            serde_derive = {
              version = "1.0";
            };
            serde_json = {
              version = "1.0";
            };
            tempdir = {
              version = "0.3.4";
            };
          };
          features = {
            ci = [
              "serde"
            ];
            default = [];
          };
          badges = {
            travis-ci = {
              repository = "steveklabnik/semver";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" = mkRustCrate {
        package-id = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "semver-parser";
          version = "0.7.0";
          sha256 = "388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "semver-parser";
            version = "0.7.0";
            authors = [
              "Steve Klabnik <steve@steveklabnik.com>"
            ];
            description = "Parsing of the semver spec.\n";
            homepage = "https://github.com/steveklabnik/semver-parser";
            documentation = "https://docs.rs/semver-parser";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/steveklabnik/semver-parser";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.89" = mkRustCrate {
        package-id = "serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "serde";
          version = "1.0.89";
          sha256 = "92514fb95f900c9b5126e32d020f5c6d40564c27a5ea6d1d7d9f157a96623560";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "serde_derive"
            ];
            extern-name = "serde_derive";
            package-id = "serde_derive 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "serde";
            version = "1.0.89";
            authors = [
              "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
              "David Tolnay <dtolnay@gmail.com>"
            ];
            build = "build.rs";
            include = [
              "Cargo.toml"
              "build.rs"
              "src/**/*.rs"
              "crates-io.md"
              "README.md"
              "LICENSE-APACHE"
              "LICENSE-MIT"
            ];
            description = "A generic serialization/deserialization framework";
            homepage = "https://serde.rs";
            documentation = "https://docs.serde.rs/serde/";
            readme = "crates-io.md";
            keywords = [
              "serde"
              "serialization"
              "no_std"
            ];
            categories = [
              "encoding"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/serde-rs/serde";
            metadata = {
              playground = {
                features = [
                  "derive"
                  "rc"
                ];
              };
            };
          };
          dependencies = {
            serde_derive = {
              version = "1.0";
              optional = true;
            };
          };
          dev-dependencies = {
            serde_derive = {
              version = "1.0";
            };
          };
          features = {
            alloc = [
              "unstable"
            ];
            default = [
              "std"
            ];
            derive = [
              "serde_derive"
            ];
            rc = [];
            std = [];
            unstable = [];
          };
          badges = {
            appveyor = {
              repository = "serde-rs/serde";
            };
            travis-ci = {
              repository = "serde-rs/serde";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.89" = mkRustCrate {
        package-id = "serde_derive 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "serde_derive";
          version = "1.0.89";
          sha256 = "bb6eabf4b5914e88e24eea240bb7c9f9a2cbc1bbbe8d961d381975ec3c6b806c";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "syn"
            ];
            extern-name = "syn";
            package-id = "syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "serde_derive";
            version = "1.0.89";
            authors = [
              "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
              "David Tolnay <dtolnay@gmail.com>"
            ];
            include = [
              "Cargo.toml"
              "src/**/*.rs"
              "crates-io.md"
              "README.md"
              "LICENSE-APACHE"
              "LICENSE-MIT"
            ];
            description = "Macros 1.1 implementation of #[derive(Serialize, Deserialize)]";
            homepage = "https://serde.rs";
            documentation = "https://serde.rs/derive.html";
            readme = "crates-io.md";
            keywords = [
              "serde"
              "serialization"
              "no_std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/serde-rs/serde";
          };
          lib = {
            name = "serde_derive";
            proc-macro = true;
          };
          dependencies = {
            proc-macro2 = {
              version = "0.4";
            };
            quote = {
              version = "0.6.3";
            };
            syn = {
              version = "0.15.22";
              features = [
                "visit"
              ];
            };
          };
          dev-dependencies = {
            serde = {
              version = "1.0";
            };
          };
          features = {
            default = [];
            deserialize_in_place = [];
          };
          badges = {
            appveyor = {
              repository = "serde-rs/serde";
            };
            travis-ci = {
              repository = "serde-rs/serde";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.39" = mkRustCrate {
        package-id = "serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "serde_json";
          version = "1.0.39";
          sha256 = "5a23aa71d4a4d43fdbfaac00eff68ba8a06a51759a89ac3304323e800c4dd40d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "itoa"
            ];
            extern-name = "itoa";
            package-id = "itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "ryu"
            ];
            extern-name = "ryu";
            package-id = "ryu 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "serde_json";
            version = "1.0.39";
            authors = [
              "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
              "David Tolnay <dtolnay@gmail.com>"
            ];
            include = [
              "Cargo.toml"
              "src/**/*.rs"
              "README.md"
              "LICENSE-APACHE"
              "LICENSE-MIT"
            ];
            description = "A JSON serialization file format";
            documentation = "http://docs.serde.rs/serde_json/";
            readme = "README.md";
            keywords = [
              "json"
              "serde"
              "serialization"
            ];
            categories = [
              "encoding"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/serde-rs/json";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "raw_value"
                    "unbounded_depth"
                  ];
                };
              };
              playground = {
                features = [
                  "raw_value"
                ];
              };
            };
          };
          dependencies = {
            indexmap = {
              version = "1.0";
              optional = true;
            };
            itoa = {
              version = "0.4.3";
            };
            ryu = {
              version = "0.2";
            };
            serde = {
              version = "1.0.60";
            };
          };
          dev-dependencies = {
            automod = {
              version = "0.1";
            };
            compiletest_rs = {
              version = "0.3";
              features = [
                "stable"
              ];
            };
            serde_bytes = {
              version = "0.10";
            };
            serde_derive = {
              version = "1.0";
            };
            serde_stacker = {
              version = "0.1";
            };
          };
          features = {
            arbitrary_precision = [];
            default = [];
            preserve_order = [
              "indexmap"
            ];
            raw_value = [];
            unbounded_depth = [];
          };
          badges = {
            appveyor = {
              repository = "serde-rs/json";
            };
            travis-ci = {
              repository = "serde-rs/json";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.9" = mkRustCrate {
        package-id = "smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "smallvec";
          version = "0.6.9";
          sha256 = "c4488ae950c49d403731982257768f48fada354a5203fe81f9bb6f43ca9002be";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "smallvec";
            version = "0.6.9";
            authors = [
              "Simon Sapin <simon.sapin@exyr.org>"
            ];
            description = "'Small vector' optimization: store up to a small number of items on the stack";
            documentation = "https://doc.servo.org/smallvec/";
            readme = "README.md";
            keywords = [
              "small"
              "vec"
              "vector"
              "stack"
              "no_std"
            ];
            categories = [
              "data-structures"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/servo/rust-smallvec";
          };
          lib = {
            name = "smallvec";
            path = "lib.rs";
          };
          dependencies = {
            serde = {
              version = "1";
              optional = true;
            };
          };
          dev-dependencies = {
            bincode = {
              version = "1.0.1";
            };
          };
          features = {
            default = [
              "std"
            ];
            may_dangle = [];
            specialization = [];
            std = [];
            union = [];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".strsim."0.7.0" = mkRustCrate {
        package-id = "strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "strsim";
          version = "0.7.0";
          sha256 = "bb4f380125926a99e52bc279241539c018323fab05ad6368b56f93d9369ff550";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "strsim";
            version = "0.7.0";
            authors = [
              "Danny Guo <dannyguo91@gmail.com>"
            ];
            description = "Implementations of string similarity metrics.\nIncludes Hamming, Levenshtein, OSA, Damerau-Levenshtein, Jaro, and Jaro-Winkler.\n";
            homepage = "https://github.com/dguo/strsim-rs";
            documentation = "https://docs.rs/strsim/";
            readme = "README.md";
            keywords = [
              "string"
              "similarity"
              "Hamming"
              "Levenshtein"
              "Jaro"
            ];
            license = "MIT";
            repository = "https://github.com/dguo/strsim-rs";
          };
          badges = {
            appveyor = {
              repository = "dguo/strsim-rs";
            };
            travis-ci = {
              repository = "dguo/strsim-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".structopt."0.2.15" = mkRustCrate {
        package-id = "structopt 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "structopt";
          version = "0.2.15";
          sha256 = "3d0760c312538987d363c36c42339b55f5ee176ea8808bbe4543d484a291c8d1";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "clap"
            ];
            extern-name = "clap";
            package-id = "clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "structopt-derive"
            ];
            extern-name = "structopt_derive";
            package-id = "structopt-derive 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "structopt";
            version = "0.2.15";
            authors = [
              "Guillaume Pinot <texitoi@texitoi.eu>"
              "others"
            ];
            description = "Parse command line argument by defining a struct.";
            documentation = "https://docs.rs/structopt";
            readme = "README.md";
            keywords = [
              "clap"
              "cli"
              "derive"
              "docopt"
            ];
            categories = [
              "command-line-interface"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/TeXitoi/structopt";
          };
          dependencies = {
            clap = {
              version = "2.21";
              default-features = false;
            };
            structopt-derive = {
              version = "0.2.15";
            };
          };
          features = {
            color = [
              "clap/color"
            ];
            debug = [
              "clap/debug"
            ];
            default = [
              "clap/default"
            ];
            doc = [
              "clap/doc"
            ];
            lints = [
              "clap/lints"
            ];
            nightly = [
              "structopt-derive/nightly"
            ];
            no_cargo = [
              "clap/no_cargo"
            ];
            suggestions = [
              "clap/suggestions"
            ];
            wrap_help = [
              "clap/wrap_help"
            ];
            yaml = [
              "clap/yaml"
            ];
          };
          badges = {
            travis-ci = {
              repository = "TeXitoi/structopt";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".structopt-derive."0.2.15" = mkRustCrate {
        package-id = "structopt-derive 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "structopt-derive";
          version = "0.2.15";
          sha256 = "528aeb7351d042e6ffbc2a6fb76a86f9b622fdf7c25932798e7a82cb03bc94c6";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "heck"
            ];
            extern-name = "heck";
            package-id = "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "syn"
            ];
            extern-name = "syn";
            package-id = "syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "structopt-derive";
            version = "0.2.15";
            authors = [
              "Guillaume Pinot <texitoi@texitoi.eu>"
            ];
            description = "Parse command line argument by defining a struct, derive crate.";
            documentation = "https://docs.rs/structopt-derive";
            keywords = [
              "clap"
              "cli"
              "derive"
              "docopt"
            ];
            categories = [
              "command-line-interface"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/TeXitoi/structopt";
          };
          lib = {
            proc-macro = true;
          };
          dependencies = {
            heck = {
              version = "^0.3.0";
            };
            proc-macro2 = {
              version = "0.4";
            };
            quote = {
              version = "0.6";
            };
            syn = {
              version = "0.15";
            };
          };
          features = {
            nightly = [
              "proc-macro2/nightly"
            ];
          };
          badges = {
            travis-ci = {
              repository = "TeXitoi/structopt";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".syn."0.15.29" = mkRustCrate {
        package-id = "syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "syn";
          version = "0.15.29";
          sha256 = "1825685f977249735d510a242a6727b46efe914bb67e38d30c071b1b72b1d5c2";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
              "proc-macro2"
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
              "quote"
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "unicode-xid"
              "unicode-xid"
              "unicode-xid"
            ];
            extern-name = "unicode_xid";
            package-id = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "syn";
            version = "0.15.29";
            authors = [
              "David Tolnay <dtolnay@gmail.com>"
            ];
            include = [
              "/build.rs"
              "/Cargo.toml"
              "/LICENSE-APACHE"
              "/LICENSE-MIT"
              "/README.md"
              "/src/**/*.rs"
            ];
            description = "Parser for Rust source code";
            documentation = "https://docs.rs/syn";
            readme = "README.md";
            categories = [
              "development-tools::procedural-macro-helpers"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/dtolnay/syn";
            metadata = {
              docs = {
                rs = {
                  all-features = true;
                };
              };
              playground = {
                all-features = true;
              };
            };
          };
          lib = {
            name = "syn";
          };
          dependencies = {
            proc-macro2 = {
              version = "0.4.4";
              default-features = false;
            };
            quote = {
              version = "0.6";
              optional = true;
              default-features = false;
            };
            unicode-xid = {
              version = "0.1";
            };
          };
          dev-dependencies = {
            rayon = {
              version = "1.0";
            };
            regex = {
              version = "1.0";
            };
            walkdir = {
              version = "2.1";
            };
          };
          features = {
            clone-impls = [];
            default = [
              "derive"
              "parsing"
              "printing"
              "clone-impls"
              "proc-macro"
            ];
            derive = [];
            extra-traits = [];
            fold = [];
            full = [];
            parsing = [];
            printing = [
              "quote"
            ];
            proc-macro = [
              "proc-macro2/proc-macro"
              "quote/proc-macro"
            ];
            visit = [];
            visit-mut = [];
          };
          badges = {
            travis-ci = {
              repository = "dtolnay/syn";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".synstructure."0.10.1" = mkRustCrate {
        package-id = "synstructure 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "synstructure";
          version = "0.10.1";
          sha256 = "73687139bf99285483c96ac0add482c3776528beac1d97d444f6e91f203a2015";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "syn"
            ];
            extern-name = "syn";
            package-id = "syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "unicode-xid"
            ];
            extern-name = "unicode_xid";
            package-id = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "synstructure";
            version = "0.10.1";
            authors = [
              "Nika Layzell <nika@thelayzells.com>"
            ];
            include = [
              "src/**/*"
              "Cargo.toml"
              "README.md"
              "LICENSE"
            ];
            description = "Helper methods and macros for custom derives";
            documentation = "https://docs.rs/synstructure";
            readme = "README.md";
            keywords = [
              "syn"
              "macros"
              "derive"
              "expand_substructure"
              "enum"
            ];
            license = "MIT";
            repository = "https://github.com/mystor/synstructure";
          };
          dependencies = {
            proc-macro2 = {
              version = "0.4";
            };
            quote = {
              version = "0.6";
            };
            syn = {
              version = "0.15";
              features = [
                "visit"
                "extra-traits"
              ];
            };
            unicode-xid = {
              version = "0.1";
            };
          };
          dev-dependencies = {
            synstructure_test_traits = {
              version = "0.1";
            };
          };
          features = {
            simple-derive = [];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.0.7" = mkRustCrate {
        package-id = "tempfile 3.0.7 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "tempfile";
          version = "3.0.7";
          sha256 = "b86c784c88d98c801132806dadd3819ed29d8600836c4088e855cdf3e178ed8a";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand"
            ];
            extern-name = "rand";
            package-id = "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "redox_syscall"
            ];
            extern-name = "syscall";
            package-id = "redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "remove_dir_all"
            ];
            extern-name = "remove_dir_all";
            package-id = "remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "tempfile";
            version = "3.0.7";
            authors = [
              "Steven Allen <steven@stebalien.com>"
              "The Rust Project Developers"
              "Ashley Mannix <ashleymannix@live.com.au>"
              "Jason White <jasonaw0@gmail.com>"
            ];
            exclude = [
              "/.travis.yml"
              "/appveyor.yml"
            ];
            description = "A library for managing temporary files and directories.\n";
            homepage = "http://stebalien.com/projects/tempfile-rs";
            documentation = "https://docs.rs/tempfile";
            keywords = [
              "tempfile"
              "tmpfile"
              "filesystem"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/Stebalien/tempfile";
          };
          dependencies = {
            cfg-if = {
              version = "0.1";
            };
            rand = {
              version = "0.6";
            };
            remove_dir_all = {
              version = "0.5";
            };
          };
          target = {
            "cfg(target_os = \"redox\")" = {
              dependencies = {
                redox_syscall = {
                  version = "0.1";
                };
              };
            };
            "cfg(unix)" = {
              dependencies = {
                libc = {
                  version = "0.2.27";
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "fileapi"
                    "winbase"
                    "handleapi"
                  ];
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".termion."1.5.1" = mkRustCrate {
        package-id = "termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "termion";
          version = "1.5.1";
          sha256 = "689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "redox_syscall"
            ];
            extern-name = "syscall";
            package-id = "redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "redox_termios"
            ];
            extern-name = "redox_termios";
            package-id = "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "termion";
            version = "1.5.1";
            authors = [
              "ticki <Ticki@users.noreply.github.com>"
              "gycos <alexandre.bury@gmail.com>"
              "IGI-111 <igi-111@protonmail.com>"
            ];
            exclude = [
              "target"
              "CHANGELOG.md"
              "image.png"
              "Cargo.lock"
            ];
            description = "A bindless library for manipulating terminals.";
            documentation = "https://docs.rs/termion";
            keywords = [
              "tty"
              "color"
              "terminal"
              "password"
              "tui"
            ];
            license = "MIT";
            repository = "https://github.com/ticki/termion";
          };
          target = {
            "cfg(not(target_os = \"redox\"))" = {
              dependencies = {
                libc = "0.2.8";
              };
            };
            "cfg(target_os = \"redox\")" = {
              dependencies = {
                redox_syscall = "0.1";
                redox_termios = "0.1";
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".textwrap."0.10.0" = mkRustCrate {
        package-id = "textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "textwrap";
          version = "0.10.0";
          sha256 = "307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "unicode-width"
            ];
            extern-name = "unicode_width";
            package-id = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "textwrap";
            version = "0.10.0";
            authors = [
              "Martin Geisler <martin@geisler.net>"
            ];
            exclude = [
              ".dir-locals.el"
            ];
            description = "Textwrap is a small library for word wrapping, indenting, and\ndedenting strings.\n\nYou can use it to format strings (such as help and error messages) for\ndisplay in commandline applications. It is designed to be efficient\nand handle Unicode characters correctly.\n";
            documentation = "https://docs.rs/textwrap/";
            readme = "README.md";
            keywords = [
              "text"
              "formatting"
              "wrap"
              "typesetting"
              "hyphenation"
            ];
            categories = [
              "text-processing"
              "command-line-interface"
            ];
            license = "MIT";
            repository = "https://github.com/mgeisler/textwrap";
            metadata = {
              docs = {
                rs = {
                  all-features = true;
                };
              };
            };
          };
          dependencies = {
            hyphenation = {
              version = "0.6.1";
              optional = true;
            };
            term_size = {
              version = "0.3.0";
              optional = true;
            };
            unicode-width = {
              version = "0.1.3";
            };
          };
          dev-dependencies = {
            lipsum = {
              version = "0.5";
            };
            rand = {
              version = "0.4";
            };
            version-sync = {
              version = "0.5";
            };
          };
          badges = {
            appveyor = {
              repository = "mgeisler/textwrap";
            };
            travis-ci = {
              repository = "mgeisler/textwrap";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".treeline."0.1.0" = mkRustCrate {
        package-id = "treeline 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "treeline";
          version = "0.1.0";
          sha256 = "a7f741b240f1a48843f9b8e0444fb55fb2a4ff67293b50a9179dfd5ea67f8d41";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "treeline";
            version = "0.1.0";
            authors = [
              "softprops <d.tangren@gmail.com>"
            ];
            description = "a library for visualizing tree structured data";
            homepage = "https://github.com/softprops/treeline";
            documentation = "https://softprops.github.io/treeline";
            keywords = [
              "tree"
            ];
            license = "MIT";
            repository = "https://github.com/softprops/treeline";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" = mkRustCrate {
        package-id = "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "unicode-bidi";
          version = "0.3.4";
          sha256 = "49f2bd0c6468a8230e1db229cff8029217cf623c767ea5d60bfbd42729ea54d5";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "matches"
            ];
            extern-name = "matches";
            package-id = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "unicode-bidi";
            version = "0.3.4";
            authors = [
              "The Servo Project Developers"
            ];
            exclude = [
              "benches/**"
              "data/**"
              "examples/**"
              "tests/**"
              "tools/**"
            ];
            description = "Implementation of the Unicode Bidirectional Algorithm";
            documentation = "http://doc.servo.org/unicode_bidi/";
            keywords = [
              "rtl"
              "unicode"
              "text"
              "layout"
              "bidi"
            ];
            license = "MIT / Apache-2.0";
            repository = "https://github.com/servo/unicode-bidi";
          };
          lib = {
            name = "unicode_bidi";
          };
          dependencies = {
            flame = {
              version = "0.1";
              optional = true;
            };
            flamer = {
              version = "0.1";
              optional = true;
            };
            matches = {
              version = "0.1";
            };
            serde = {
              version = ">=0.8, <2.0";
              features = [
                "derive"
              ];
              optional = true;
            };
          };
          dev-dependencies = {
            serde_test = {
              version = ">=0.8, <2.0";
            };
          };
          features = {
            bench_it = [];
            default = [];
            flame_it = [
              "flame"
              "flamer"
            ];
            unstable = [];
            with_serde = [
              "serde"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.8" = mkRustCrate {
        package-id = "unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "unicode-normalization";
          version = "0.1.8";
          sha256 = "141339a08b982d942be2ca06ff8b076563cbe223d1befd5450716790d44e2426";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "smallvec"
            ];
            extern-name = "smallvec";
            package-id = "smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "unicode-normalization";
            version = "0.1.8";
            authors = [
              "kwantam <kwantam@gmail.com>"
            ];
            exclude = [
              "target/*"
              "Cargo.lock"
              "scripts/tmp"
              "*.txt"
              "src/normalization_tests.rs"
              "src/test.rs"
            ];
            description = "This crate provides functions for normalization of\nUnicode strings, including Canonical and Compatible\nDecomposition and Recomposition, as described in\nUnicode Standard Annex #15.\n";
            homepage = "https://github.com/unicode-rs/unicode-normalization";
            documentation = "https://docs.rs/unicode-normalization/";
            readme = "README.md";
            keywords = [
              "text"
              "unicode"
              "normalization"
              "decomposition"
              "recomposition"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/unicode-rs/unicode-normalization";
          };
          dependencies = {
            smallvec = {
              version = "0.6";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.2.1" = mkRustCrate {
        package-id = "unicode-segmentation 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "unicode-segmentation";
          version = "1.2.1";
          sha256 = "aa6024fc12ddfd1c6dbc14a80fa2324d4568849869b779f6bd37e5e4c03344d1";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "unicode-segmentation";
            version = "1.2.1";
            authors = [
              "kwantam <kwantam@gmail.com>"
            ];
            exclude = [
              "target/*"
              "Cargo.lock"
              "scripts/tmp"
              "*.txt"
            ];
            description = "This crate provides Grapheme Cluster and Word boundaries\naccording to Unicode Standard Annex #29 rules.\n";
            homepage = "https://github.com/unicode-rs/unicode-segmentation";
            documentation = "https://unicode-rs.github.io/unicode-segmentation";
            readme = "README.md";
            keywords = [
              "text"
              "unicode"
              "grapheme"
              "word"
              "boundary"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/unicode-rs/unicode-segmentation";
          };
          dev-dependencies = {
            quickcheck = {
              version = "0.4";
            };
          };
          features = {
            no_std = [];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" = mkRustCrate {
        package-id = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "unicode-width";
          version = "0.1.5";
          sha256 = "882386231c45df4700b275c7ff55b6f3698780a650026380e72dabe76fa46526";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "unicode-width";
            version = "0.1.5";
            authors = [
              "kwantam <kwantam@gmail.com>"
            ];
            exclude = [
              "target/*"
              "Cargo.lock"
            ];
            description = "Determine displayed width of `char` and `str` types\naccording to Unicode Standard Annex #11 rules.\n";
            homepage = "https://github.com/unicode-rs/unicode-width";
            documentation = "https://unicode-rs.github.io/unicode-width";
            readme = "README.md";
            keywords = [
              "text"
              "width"
              "unicode"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/unicode-rs/unicode-width";
          };
          features = {
            bench = [];
            default = [];
            no_std = [];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" = mkRustCrate {
        package-id = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "unicode-xid";
          version = "0.1.0";
          sha256 = "fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "unicode-xid";
            version = "0.1.0";
            authors = [
              "erick.tryzelaar <erick.tryzelaar@gmail.com>"
              "kwantam <kwantam@gmail.com>"
            ];
            exclude = [
              "target/*"
              "Cargo.lock"
            ];
            description = "Determine whether characters have the XID_Start\nor XID_Continue properties according to\nUnicode Standard Annex #31.\n";
            homepage = "https://github.com/unicode-rs/unicode-xid";
            documentation = "https://unicode-rs.github.io/unicode-xid";
            readme = "README.md";
            keywords = [
              "text"
              "unicode"
              "xid"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/unicode-rs/unicode-xid";
          };
          features = {
            bench = [];
            default = [];
            no_std = [];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".url."1.7.2" = mkRustCrate {
        package-id = "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "url";
          version = "1.7.2";
          sha256 = "dd4e7c0d531266369519a4aa4f399d748bd37043b00bde1e4ff1f60a120b355a";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "idna"
            ];
            extern-name = "idna";
            package-id = "idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "matches"
            ];
            extern-name = "matches";
            package-id = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "percent-encoding"
            ];
            extern-name = "percent_encoding";
            package-id = "percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "url";
            version = "1.7.2";
            authors = [
              "The rust-url developers"
            ];
            description = "URL library for Rust, based on the WHATWG URL Standard";
            documentation = "https://docs.rs/url";
            readme = "README.md";
            keywords = [
              "url"
              "parser"
            ];
            categories = [
              "parser-implementations"
              "web-programming"
              "encoding"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/servo/rust-url";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "query_encoding"
                  ];
                };
              };
            };
          };
          lib = {
            test = false;
          };
          test = [
            {
              name = "unit";
            }
            {
              name = "data";
              harness = false;
            }
          ];
          bench = [
            {
              name = "parse_url";
              harness = false;
            }
          ];
          dependencies = {
            encoding = {
              version = "0.2";
              optional = true;
            };
            heapsize = {
              version = ">=0.4.1, <0.5";
              optional = true;
            };
            idna = {
              version = "0.1.0";
            };
            matches = {
              version = "0.1";
            };
            percent-encoding = {
              version = "1.0.0";
            };
            rustc-serialize = {
              version = "0.3";
              optional = true;
            };
            serde = {
              version = ">=0.6.1, <0.9";
              optional = true;
            };
          };
          dev-dependencies = {
            bencher = {
              version = "0.1";
            };
            rustc-serialize = {
              version = "0.3";
            };
            rustc-test = {
              version = "0.3";
            };
            serde_json = {
              version = ">=0.6.1, <0.9";
            };
          };
          features = {
            heap_size = [
              "heapsize"
            ];
            query_encoding = [
              "encoding"
            ];
          };
          badges = {
            appveyor = {
              repository = "Manishearth/rust-url";
            };
            travis-ci = {
              repository = "servo/rust-url";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.6" = mkRustCrate {
        package-id = "vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "vcpkg";
          version = "0.2.6";
          sha256 = "def296d3eb3b12371b2c7d0e83bfe1403e4db2d7a0bba324a12b21c4ee13143d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "vcpkg";
            version = "0.2.6";
            authors = [
              "Jim McGrath <jimmc2@gmail.com>"
            ];
            description = "A library to find native dependencies in a vcpkg tree at build\ntime in order to be used in Cargo build scripts.\n";
            documentation = "https://docs.rs/vcpkg";
            readme = "../README.md";
            keywords = [
              "build-dependencies"
              "windows"
              "ffi"
              "win32"
            ];
            categories = [
              "os::windows-apis"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/mcgoo/vcpkg-rs";
          };
          dependencies = {};
          dev-dependencies = {
            lazy_static = {
              version = "1";
            };
            tempdir = {
              version = "0.3.7";
            };
          };
          badges = {
            appveyor = {
              branch = "master";
              repository = "mcgoo/vcpkg-rs";
              service = "github";
            };
            travis-ci = {
              branch = "master";
              repository = "mcgoo/vcpkg-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".vec_map."0.8.1" = mkRustCrate {
        package-id = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "vec_map";
          version = "0.8.1";
          sha256 = "05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "vec_map";
            version = "0.8.1";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
              "Jorge Aparicio <japaricious@gmail.com>"
              "Alexis Beingessner <a.beingessner@gmail.com>"
              "Brian Anderson <>"
              "tbu- <>"
              "Manish Goregaokar <>"
              "Aaron Turon <aturon@mozilla.com>"
              "Adolfo Ochagavía <>"
              "Niko Matsakis <>"
              "Steven Fackler <>"
              "Chase Southwood <csouth3@illinois.edu>"
              "Eduard Burtescu <>"
              "Florian Wilkens <>"
              "Félix Raimundo <>"
              "Tibor Benke <>"
              "Markus Siemens <markus@m-siemens.de>"
              "Josh Branchaud <jbranchaud@gmail.com>"
              "Huon Wilson <dbau.pp@gmail.com>"
              "Corey Farwell <coref@rwell.org>"
              "Aaron Liblong <>"
              "Nick Cameron <nrc@ncameron.org>"
              "Patrick Walton <pcwalton@mimiga.net>"
              "Felix S Klock II <>"
              "Andrew Paseltiner <apaseltiner@gmail.com>"
              "Sean McArthur <sean.monstar@gmail.com>"
              "Vadim Petrochenkov <>"
            ];
            description = "A simple map based on a vector for small integer keys";
            homepage = "https://github.com/contain-rs/vec-map";
            documentation = "https://contain-rs.github.io/vec-map/vec_map";
            readme = "README.md";
            keywords = [
              "data-structures"
              "collections"
              "vecmap"
              "vec_map"
              "contain-rs"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/contain-rs/vec-map";
          };
          dependencies = {
            serde = {
              version = "1.0";
              features = [
                "derive"
              ];
              optional = true;
            };
          };
          features = {
            eders = [
              "serde"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" = mkRustCrate {
        package-id = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "winapi";
          version = "0.3.6";
          sha256 = "92c1eb33641e276cfa214a0522acad57be5c56b10cb348b3c5117db75f3ac4b0";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
            ];
            extern-name = "winapi_i686_pc_windows_gnu";
            package-id = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
            ];
            extern-name = "winapi_x86_64_pc_windows_gnu";
            package-id = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "winapi";
            version = "0.3.6";
            authors = [
              "Peter Atashian <retep998@gmail.com>"
            ];
            build = "build.rs";
            include = [
              "/src/**/*"
              "/Cargo.toml"
              "/LICENSE-MIT"
              "/LICENSE-APACHE"
              "/build.rs"
              "/README.md"
            ];
            description = "Raw FFI bindings for all of Windows API.";
            documentation = "https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/";
            readme = "README.md";
            keywords = [
              "windows"
              "ffi"
              "win32"
              "com"
              "directx"
            ];
            categories = [
              "external-ffi-bindings"
              "no-std"
              "os::windows-apis"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/retep998/winapi-rs";
            metadata = {
              docs = {
                rs = {
                  default-target = "x86_64-pc-windows-msvc";
                  features = [
                    "everything"
                  ];
                };
              };
            };
          };
          features = {
            accctrl = [];
            aclapi = [];
            activation = [];
            appmgmt = [];
            audioclient = [];
            audiosessiontypes = [];
            avrt = [];
            basetsd = [];
            bcrypt = [];
            bits = [];
            bits10_1 = [];
            bits1_5 = [];
            bits2_0 = [];
            bits2_5 = [];
            bits3_0 = [];
            bits4_0 = [];
            bits5_0 = [];
            bitscfg = [];
            bitsmsg = [];
            bugcodes = [];
            cderr = [];
            cfg = [];
            cfgmgr32 = [];
            cguid = [];
            combaseapi = [];
            coml2api = [];
            commapi = [];
            commctrl = [];
            commdlg = [];
            commoncontrols = [];
            consoleapi = [];
            corsym = [];
            d2d1 = [];
            d2d1_1 = [];
            d2d1_2 = [];
            d2d1_3 = [];
            d2d1effectauthor = [];
            d2d1effects = [];
            d2d1effects_1 = [];
            d2d1effects_2 = [];
            d2d1svg = [];
            d2dbasetypes = [];
            d3d = [];
            d3d10 = [];
            d3d10_1 = [];
            d3d10_1shader = [];
            d3d10effect = [];
            d3d10misc = [];
            d3d10sdklayers = [];
            d3d10shader = [];
            d3d11 = [];
            d3d11_1 = [];
            d3d11_2 = [];
            d3d11_3 = [];
            d3d11_4 = [];
            d3d11on12 = [];
            d3d11sdklayers = [];
            d3d11shader = [];
            d3d11tokenizedprogramformat = [];
            d3d12 = [];
            d3d12sdklayers = [];
            d3d12shader = [];
            d3d9 = [];
            d3d9caps = [];
            d3d9types = [];
            d3dcommon = [];
            d3dcompiler = [];
            d3dcsx = [];
            d3dx10core = [];
            d3dx10math = [];
            d3dx10mesh = [];
            datetimeapi = [];
            davclnt = [];
            dbghelp = [];
            dbt = [];
            dcommon = [];
            dcomp = [];
            dcompanimation = [];
            dcomptypes = [];
            dde = [];
            ddraw = [];
            ddrawi = [];
            ddrawint = [];
            debug = [];
            debugapi = [];
            devguid = [];
            devicetopology = [];
            devpkey = [];
            devpropdef = [];
            dinput = [];
            dinputd = [];
            dmksctl = [];
            dmusicc = [];
            docobj = [];
            documenttarget = [];
            dpa_dsa = [];
            dpapi = [];
            dsgetdc = [];
            dsound = [];
            dsrole = [];
            dvp = [];
            dwmapi = [];
            dwrite = [];
            dwrite_1 = [];
            dwrite_2 = [];
            dwrite_3 = [];
            dxdiag = [];
            dxfile = [];
            dxgi = [];
            dxgi1_2 = [];
            dxgi1_3 = [];
            dxgi1_4 = [];
            dxgi1_5 = [];
            dxgi1_6 = [];
            dxgidebug = [];
            dxgiformat = [];
            dxgitype = [];
            dxva2api = [];
            dxvahd = [];
            endpointvolume = [];
            errhandlingapi = [];
            everything = [];
            evntcons = [];
            evntprov = [];
            evntrace = [];
            excpt = [];
            exdisp = [];
            fibersapi = [];
            fileapi = [];
            gl-gl = [];
            guiddef = [];
            handleapi = [];
            heapapi = [];
            hidclass = [];
            hidpi = [];
            hidsdi = [];
            hidusage = [];
            highlevelmonitorconfigurationapi = [];
            hstring = [];
            http = [];
            imm = [];
            impl-default = [];
            in6addr = [];
            inaddr = [];
            inspectable = [];
            interlockedapi = [];
            intsafe = [];
            ioapiset = [];
            jobapi = [];
            jobapi2 = [];
            knownfolders = [];
            ks = [];
            ksmedia = [];
            ktmtypes = [];
            ktmw32 = [];
            libloaderapi = [];
            limits = [];
            lmaccess = [];
            lmalert = [];
            lmapibuf = [];
            lmat = [];
            lmcons = [];
            lmdfs = [];
            lmerrlog = [];
            lmjoin = [];
            lmmsg = [];
            lmremutl = [];
            lmrepl = [];
            lmserver = [];
            lmshare = [];
            lmstats = [];
            lmsvc = [];
            lmuse = [];
            lmwksta = [];
            lowlevelmonitorconfigurationapi = [];
            lsalookup = [];
            memoryapi = [];
            minschannel = [];
            minwinbase = [];
            minwindef = [];
            mmdeviceapi = [];
            mmeapi = [];
            mmreg = [];
            mmsystem = [];
            msaatext = [];
            mscat = [];
            mschapp = [];
            mssip = [];
            mstcpip = [];
            namedpipeapi = [];
            namespaceapi = [];
            nb30 = [];
            ncrypt = [];
            ntddscsi = [];
            ntddser = [];
            ntdef = [];
            ntlsa = [];
            ntsecapi = [];
            ntstatus = [];
            oaidl = [];
            objbase = [];
            objidl = [];
            objidlbase = [];
            ocidl = [];
            ole2 = [];
            oleauto = [];
            olectl = [];
            oleidl = [];
            opmapi = [];
            pdh = [];
            perflib = [];
            physicalmonitorenumerationapi = [];
            playsoundapi = [];
            powerbase = [];
            powersetting = [];
            powrprof = [];
            processenv = [];
            processsnapshot = [];
            processthreadsapi = [];
            processtopologyapi = [];
            profileapi = [];
            propidl = [];
            propkeydef = [];
            propsys = [];
            prsht = [];
            psapi = [];
            qos = [];
            realtimeapiset = [];
            reason = [];
            restartmanager = [];
            restrictederrorinfo = [];
            rmxfguid = [];
            roapi = [];
            robuffer = [];
            roerrorapi = [];
            rpc = [];
            rpcdce = [];
            rpcndr = [];
            sapi = [];
            sapi51 = [];
            sapi53 = [];
            sapiddk = [];
            sapiddk51 = [];
            schannel = [];
            sddl = [];
            securityappcontainer = [];
            securitybaseapi = [];
            servprov = [];
            setupapi = [];
            shellapi = [];
            shellscalingapi = [];
            shlobj = [];
            shobjidl = [];
            shobjidl_core = [];
            shtypes = [];
            spapidef = [];
            sporder = [];
            sql = [];
            sqlext = [];
            sqltypes = [];
            sqlucode = [];
            sspi = [];
            std = [];
            stralign = [];
            stringapiset = [];
            strmif = [];
            subauth = [];
            synchapi = [];
            sysinfoapi = [];
            systemtopologyapi = [];
            textstor = [];
            threadpoolapiset = [];
            threadpoollegacyapiset = [];
            timeapi = [];
            timezoneapi = [];
            tlhelp32 = [];
            transportsettingcommon = [];
            tvout = [];
            unknwnbase = [];
            urlhist = [];
            urlmon = [];
            usb = [];
            usbiodef = [];
            usbspec = [];
            userenv = [];
            usp10 = [];
            utilapiset = [];
            uxtheme = [];
            vadefs = [];
            vcruntime = [];
            vsbackup = [];
            vss = [];
            vsserror = [];
            vswriter = [];
            wct = [];
            werapi = [];
            winbase = [];
            wincodec = [];
            wincodecsdk = [];
            wincon = [];
            wincred = [];
            wincrypt = [];
            windef = [];
            windowsceip = [];
            windowsx = [];
            winefs = [];
            winerror = [];
            winevt = [];
            wingdi = [];
            winhttp = [];
            wininet = [];
            winineti = [];
            winioctl = [];
            winnetwk = [];
            winnls = [];
            winnt = [];
            winreg = [];
            winsafer = [];
            winscard = [];
            winsmcrd = [];
            winsock2 = [];
            winspool = [];
            winstring = [];
            winsvc = [];
            winusb = [];
            winusbio = [];
            winuser = [];
            winver = [];
            wmistr = [];
            wnnc = [];
            wow64apiset = [];
            ws2def = [];
            ws2ipdef = [];
            ws2spi = [];
            ws2tcpip = [];
            wtypes = [];
            wtypesbase = [];
            xinput = [];
          };
          target = {
            i686-pc-windows-gnu = {
              dependencies = {
                winapi-i686-pc-windows-gnu = {
                  version = "0.4";
                };
              };
            };
            x86_64-pc-windows-gnu = {
              dependencies = {
                winapi-x86_64-pc-windows-gnu = {
                  version = "0.4";
                };
              };
            };
          };
          badges = {
            appveyor = {
              branch = "0.3";
              repository = "retep998/winapi-rs";
              service = "github";
            };
            travis-ci = {
              branch = "0.3";
              repository = "retep998/winapi-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = mkRustCrate {
        package-id = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "winapi-i686-pc-windows-gnu";
          version = "0.4.0";
          sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "winapi-i686-pc-windows-gnu";
            version = "0.4.0";
            authors = [
              "Peter Atashian <retep998@gmail.com>"
            ];
            build = "build.rs";
            include = [
              "src/*"
              "lib/*"
              "Cargo.toml"
              "build.rs"
            ];
            description = "Import libraries for the i686-pc-windows-gnu target. Please don't use this crate directly, depend on winapi instead.";
            keywords = [
              "windows"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/retep998/winapi-rs";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = mkRustCrate {
        package-id = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "winapi-x86_64-pc-windows-gnu";
          version = "0.4.0";
          sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [];
        cargo-manifest = {
          package = {
            name = "winapi-x86_64-pc-windows-gnu";
            version = "0.4.0";
            authors = [
              "Peter Atashian <retep998@gmail.com>"
            ];
            build = "build.rs";
            include = [
              "src/*"
              "lib/*"
              "Cargo.toml"
              "build.rs"
            ];
            description = "Import libraries for the x86_64-pc-windows-gnu target. Please don't use this crate directly, depend on winapi instead.";
            keywords = [
              "windows"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/retep998/winapi-rs";
          };
        };
      };
      sources = [
        "registry+https://github.com/rust-lang/crates.io-index"
        "unknown"
      ];
    }))